<?xml version="1.0" encoding="UTF-8"?>
<!--
    Auto-generated configuration
    DO NOT EDIT MANUALLY!
-->
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:util="http://www.springframework.org/schema/util"
        xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd"
        default-lazy-init="false"
        default-autowire="no"
        default-dependency-check="none">

    <!--<import resource = "network.xml" />-->

    <bean id="queryExecutor"
            class="org.dataguard.helpers.query.QueryExecutor">
		<!--<property name="databaseInfo" ref="databaseInfo" />-->
		<property name="dataSource" ref="monitoredDataSource" />
		<property name="queries">
            <util:properties location="queries.properties" />
            <!--<bean class = "org.springframework.beans.factory.config.PropertiesFactoryBean">
             <property name = "location"
                     value = "queries.properties" />
         </bean>-->
		</property>
	</bean>


	<bean id="resourcesPublisher"
            class="org.dataguard.network.rest.spring.SpringRouterHelperBean">
        <property name="router" ref="databasesRouter" />
        <property name="mapping">
            <map key-type="java.lang.String"
                    value-type="java.lang.String">
	            <entry key="/${db.id}/queries"
                        value="queriesResource" />
                <entry key="/${db.id}/queries/{query-id}"
                        value="queriesResource" />
            </map>
        </property>
    </bean>

	<bean id="queriesResource"
            class="org.dataguard.network.rest.resources.db.QueriesResource"
            scope="prototype">
		<property name="queryExecutor"
                ref="queryExecutor" />
	</bean>
</beans>