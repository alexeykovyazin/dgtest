<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="12" total="132" passed="118" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-03-03T23:07:35 GMT+03:00" name="TestOne" finished-at="2020-03-03T23:16:48 GMT+03:00" duration-ms="552229">
    <groups>
    </groups>
    <test started-at="2020-03-03T23:07:35 GMT+03:00" name="Database" finished-at="2020-03-03T23:07:47 GMT+03:00" duration-ms="11249">
      <class name="TestPage.TestDashboard.TestDatabase">
        <test-method is-config="true" signature="classSetUp()[pri:0, instance:TestPage.TestDashboard.TestDatabase@4a60ee36]" started-at="2020-03-03T23:07:35 GMT+03:00" name="classSetUp" finished-at="2020-03-03T23:07:37 GMT+03:00" duration-ms="1782" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classSetUp -->
        <test-method signature="testAddDbEmptyPath()[pri:1, instance:TestPage.TestDashboard.TestDatabase@4a60ee36]" started-at="2020-03-03T23:07:37 GMT+03:00" name="testAddDbEmptyPath" finished-at="2020-03-03T23:07:38 GMT+03:00" duration-ms="394" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddDbEmptyPath -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestDatabase@4a60ee36]" started-at="2020-03-03T23:07:38 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:07:38 GMT+03:00" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestDatabase.testAddDbEmptyPath()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testAddDbEmptyPath status=SUCCESS method=TestDatabase.testAddDbEmptyPath()[pri:1, instance:TestPage.TestDashboard.TestDatabase@4a60ee36] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testAddDbEmptyName()[pri:2, instance:TestPage.TestDashboard.TestDatabase@4a60ee36]" started-at="2020-03-03T23:07:38 GMT+03:00" name="testAddDbEmptyName" finished-at="2020-03-03T23:07:38 GMT+03:00" duration-ms="379" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddDbEmptyName -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestDatabase@4a60ee36]" started-at="2020-03-03T23:07:38 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:07:38 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestDatabase.testAddDbEmptyName()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testAddDbEmptyName status=SUCCESS method=TestDatabase.testAddDbEmptyName()[pri:2, instance:TestPage.TestDashboard.TestDatabase@4a60ee36] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testAddDbIncorrectPath()[pri:3, instance:TestPage.TestDashboard.TestDatabase@4a60ee36]" started-at="2020-03-03T23:07:38 GMT+03:00" name="testAddDbIncorrectPath" finished-at="2020-03-03T23:07:38 GMT+03:00" duration-ms="297" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddDbIncorrectPath -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestDatabase@4a60ee36]" started-at="2020-03-03T23:07:38 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:07:38 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestDatabase.testAddDbIncorrectPath()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testAddDbIncorrectPath status=SUCCESS method=TestDatabase.testAddDbIncorrectPath()[pri:3, instance:TestPage.TestDashboard.TestDatabase@4a60ee36] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testAddDbIncorrectAlias()[pri:4, instance:TestPage.TestDashboard.TestDatabase@4a60ee36]" started-at="2020-03-03T23:07:38 GMT+03:00" name="testAddDbIncorrectAlias" finished-at="2020-03-03T23:07:39 GMT+03:00" duration-ms="547" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddDbIncorrectAlias -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestDatabase@4a60ee36]" started-at="2020-03-03T23:07:39 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:07:39 GMT+03:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestDatabase.testAddDbIncorrectAlias()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testAddDbIncorrectAlias status=SUCCESS method=TestDatabase.testAddDbIncorrectAlias()[pri:4, instance:TestPage.TestDashboard.TestDatabase@4a60ee36] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testAddDbCorrect()[pri:5, instance:TestPage.TestDashboard.TestDatabase@4a60ee36]" started-at="2020-03-03T23:07:39 GMT+03:00" name="testAddDbCorrect" finished-at="2020-03-03T23:07:44 GMT+03:00" duration-ms="5471" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddDbCorrect -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestDatabase@4a60ee36]" started-at="2020-03-03T23:07:44 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:07:44 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestDatabase.testAddDbCorrect()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testAddDbCorrect status=SUCCESS method=TestDatabase.testAddDbCorrect()[pri:5, instance:TestPage.TestDashboard.TestDatabase@4a60ee36] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testAddDbAlreadyExist()[pri:6, instance:TestPage.TestDashboard.TestDatabase@4a60ee36]" started-at="2020-03-03T23:07:44 GMT+03:00" name="testAddDbAlreadyExist" finished-at="2020-03-03T23:07:47 GMT+03:00" duration-ms="2220" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddDbAlreadyExist -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestDatabase@4a60ee36]" started-at="2020-03-03T23:07:47 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:07:47 GMT+03:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestDatabase.testAddDbAlreadyExist()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testAddDbAlreadyExist status=SUCCESS method=TestDatabase.testAddDbAlreadyExist()[pri:6, instance:TestPage.TestDashboard.TestDatabase@4a60ee36] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
      </class> <!-- TestPage.TestDashboard.TestDatabase -->
    </test> <!-- Database -->
    <test started-at="2020-03-03T23:07:47 GMT+03:00" name="Backup" finished-at="2020-03-03T23:12:14 GMT+03:00" duration-ms="266890">
      <class name="TestPage.TestDashboard.Backup.TestSqlPing">
        <test-method is-config="true" signature="classSetUp()[pri:0, instance:TestPage.TestDashboard.Backup.TestSqlPing@23cd4ff2]" started-at="2020-03-03T23:10:52 GMT+03:00" name="classSetUp" finished-at="2020-03-03T23:10:55 GMT+03:00" duration-ms="2689" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classSetUp -->
        <test-method signature="testCheckScheduleIncorrect()[pri:1, instance:TestPage.TestDashboard.Backup.TestSqlPing@23cd4ff2]" started-at="2020-03-03T23:10:55 GMT+03:00" name="testCheckScheduleIncorrect" finished-at="2020-03-03T23:10:56 GMT+03:00" duration-ms="1368" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckScheduleIncorrect -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestSqlPing@23cd4ff2]" started-at="2020-03-03T23:10:56 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:10:56 GMT+03:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestSqlPing.testCheckScheduleIncorrect()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckScheduleIncorrect status=SUCCESS method=TestSqlPing.testCheckScheduleIncorrect()[pri:1, instance:TestPage.TestDashboard.Backup.TestSqlPing@23cd4ff2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckSqlQueryEmptyField()[pri:2, instance:TestPage.TestDashboard.Backup.TestSqlPing@23cd4ff2]" started-at="2020-03-03T23:10:56 GMT+03:00" name="testCheckSqlQueryEmptyField" finished-at="2020-03-03T23:10:58 GMT+03:00" duration-ms="1427" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckSqlQueryEmptyField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestSqlPing@23cd4ff2]" started-at="2020-03-03T23:10:58 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:10:58 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestSqlPing.testCheckSqlQueryEmptyField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckSqlQueryEmptyField status=SUCCESS method=TestSqlPing.testCheckSqlQueryEmptyField()[pri:2, instance:TestPage.TestDashboard.Backup.TestSqlPing@23cd4ff2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateSqlPingCorrect()[pri:3, instance:TestPage.TestDashboard.Backup.TestSqlPing@23cd4ff2]" started-at="2020-03-03T23:10:58 GMT+03:00" name="testCreateSqlPingCorrect" finished-at="2020-03-03T23:11:32 GMT+03:00" duration-ms="34266" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateSqlPingCorrect -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestSqlPing@23cd4ff2]" started-at="2020-03-03T23:11:32 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:11:32 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestSqlPing.testCreateSqlPingCorrect()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateSqlPingCorrect status=SUCCESS method=TestSqlPing.testCreateSqlPingCorrect()[pri:3, instance:TestPage.TestDashboard.Backup.TestSqlPing@23cd4ff2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
      </class> <!-- TestPage.TestDashboard.Backup.TestSqlPing -->
      <class name="TestPage.TestDashboard.Backup.TestValidateDb">
        <test-method is-config="true" signature="classSetUp()[pri:0, instance:TestPage.TestDashboard.Backup.TestValidateDb@70807224]" started-at="2020-03-03T23:11:32 GMT+03:00" name="classSetUp" finished-at="2020-03-03T23:11:38 GMT+03:00" duration-ms="5682" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classSetUp -->
        <test-method signature="testCheckScheduleIncorrectField()[pri:1, instance:TestPage.TestDashboard.Backup.TestValidateDb@70807224]" started-at="2020-03-03T23:11:38 GMT+03:00" name="testCheckScheduleIncorrectField" finished-at="2020-03-03T23:11:39 GMT+03:00" duration-ms="1302" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckScheduleIncorrectField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestValidateDb@70807224]" started-at="2020-03-03T23:11:39 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:11:39 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestValidateDb.testCheckScheduleIncorrectField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckScheduleIncorrectField status=SUCCESS method=TestValidateDb.testCheckScheduleIncorrectField()[pri:1, instance:TestPage.TestDashboard.Backup.TestValidateDb@70807224] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckShutdownTimeoutEmptyField()[pri:2, instance:TestPage.TestDashboard.Backup.TestValidateDb@70807224]" started-at="2020-03-03T23:11:39 GMT+03:00" name="testCheckShutdownTimeoutEmptyField" finished-at="2020-03-03T23:11:40 GMT+03:00" duration-ms="453" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckShutdownTimeoutEmptyField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestValidateDb@70807224]" started-at="2020-03-03T23:11:40 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:11:40 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestValidateDb.testCheckShutdownTimeoutEmptyField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckShutdownTimeoutEmptyField status=SUCCESS method=TestValidateDb.testCheckShutdownTimeoutEmptyField()[pri:2, instance:TestPage.TestDashboard.Backup.TestValidateDb@70807224] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateValidateBDCorrect()[pri:3, instance:TestPage.TestDashboard.Backup.TestValidateDb@70807224]" started-at="2020-03-03T23:11:40 GMT+03:00" name="testCreateValidateBDCorrect" finished-at="2020-03-03T23:12:14 GMT+03:00" duration-ms="34017" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateValidateBDCorrect -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestValidateDb@70807224]" started-at="2020-03-03T23:12:14 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:12:14 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestValidateDb.testCreateValidateBDCorrect()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateValidateBDCorrect status=SUCCESS method=TestValidateDb.testCreateValidateBDCorrect()[pri:3, instance:TestPage.TestDashboard.Backup.TestValidateDb@70807224] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
      </class> <!-- TestPage.TestDashboard.Backup.TestValidateDb -->
      <class name="TestPage.TestDashboard.Backup.TestRestoreDb">
        <test-method is-config="true" signature="classSetUp()[pri:0, instance:TestPage.TestDashboard.Backup.TestRestoreDb@5b5caf08]" started-at="2020-03-03T23:09:59 GMT+03:00" name="classSetUp" finished-at="2020-03-03T23:10:05 GMT+03:00" duration-ms="5902" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classSetUp -->
        <test-method signature="testCreateRestoreDbScheduleIncorrect()[pri:1, instance:TestPage.TestDashboard.Backup.TestRestoreDb@5b5caf08]" started-at="2020-03-03T23:10:05 GMT+03:00" name="testCreateRestoreDbScheduleIncorrect" finished-at="2020-03-03T23:10:07 GMT+03:00" duration-ms="1563" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateRestoreDbScheduleIncorrect -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestRestoreDb@5b5caf08]" started-at="2020-03-03T23:10:07 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:10:07 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestRestoreDb.testCreateRestoreDbScheduleIncorrect()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateRestoreDbScheduleIncorrect status=SUCCESS method=TestRestoreDb.testCreateRestoreDbScheduleIncorrect()[pri:1, instance:TestPage.TestDashboard.Backup.TestRestoreDb@5b5caf08] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateRestoreDbBackupFolderEmptyField()[pri:2, instance:TestPage.TestDashboard.Backup.TestRestoreDb@5b5caf08]" started-at="2020-03-03T23:10:07 GMT+03:00" name="testCreateRestoreDbBackupFolderEmptyField" finished-at="2020-03-03T23:10:08 GMT+03:00" duration-ms="1317" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateRestoreDbBackupFolderEmptyField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestRestoreDb@5b5caf08]" started-at="2020-03-03T23:10:08 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:10:08 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestRestoreDb.testCreateRestoreDbBackupFolderEmptyField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateRestoreDbBackupFolderEmptyField status=SUCCESS method=TestRestoreDb.testCreateRestoreDbBackupFolderEmptyField()[pri:2, instance:TestPage.TestDashboard.Backup.TestRestoreDb@5b5caf08] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateRestoreDbPathTemplateBackupFolderEmptyField()[pri:3, instance:TestPage.TestDashboard.Backup.TestRestoreDb@5b5caf08]" started-at="2020-03-03T23:10:08 GMT+03:00" name="testCreateRestoreDbPathTemplateBackupFolderEmptyField" finished-at="2020-03-03T23:10:09 GMT+03:00" duration-ms="1424" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateRestoreDbPathTemplateBackupFolderEmptyField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestRestoreDb@5b5caf08]" started-at="2020-03-03T23:10:09 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:10:09 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestRestoreDb.testCreateRestoreDbPathTemplateBackupFolderEmptyField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateRestoreDbPathTemplateBackupFolderEmptyField status=SUCCESS method=TestRestoreDb.testCreateRestoreDbPathTemplateBackupFolderEmptyField()[pri:3, instance:TestPage.TestDashboard.Backup.TestRestoreDb@5b5caf08] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateRestoreTimeTakeBackupEmptyField()[pri:4, instance:TestPage.TestDashboard.Backup.TestRestoreDb@5b5caf08]" started-at="2020-03-03T23:10:09 GMT+03:00" name="testCreateRestoreTimeTakeBackupEmptyField" finished-at="2020-03-03T23:10:11 GMT+03:00" duration-ms="1719" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateRestoreTimeTakeBackupEmptyField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestRestoreDb@5b5caf08]" started-at="2020-03-03T23:10:11 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:10:11 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestRestoreDb.testCreateRestoreTimeTakeBackupEmptyField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateRestoreTimeTakeBackupEmptyField status=SUCCESS method=TestRestoreDb.testCreateRestoreTimeTakeBackupEmptyField()[pri:4, instance:TestPage.TestDashboard.Backup.TestRestoreDb@5b5caf08] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateRestoreDbPathRestoreFolderEmptyField()[pri:5, instance:TestPage.TestDashboard.Backup.TestRestoreDb@5b5caf08]" started-at="2020-03-03T23:10:11 GMT+03:00" name="testCreateRestoreDbPathRestoreFolderEmptyField" finished-at="2020-03-03T23:10:12 GMT+03:00" duration-ms="1401" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateRestoreDbPathRestoreFolderEmptyField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestRestoreDb@5b5caf08]" started-at="2020-03-03T23:10:12 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:10:12 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestRestoreDb.testCreateRestoreDbPathRestoreFolderEmptyField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateRestoreDbPathRestoreFolderEmptyField status=SUCCESS method=TestRestoreDb.testCreateRestoreDbPathRestoreFolderEmptyField()[pri:5, instance:TestPage.TestDashboard.Backup.TestRestoreDb@5b5caf08] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateRestoreDbRestoreFileNameEmptyField()[pri:6, instance:TestPage.TestDashboard.Backup.TestRestoreDb@5b5caf08]" started-at="2020-03-03T23:10:12 GMT+03:00" name="testCreateRestoreDbRestoreFileNameEmptyField" finished-at="2020-03-03T23:10:14 GMT+03:00" duration-ms="1373" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateRestoreDbRestoreFileNameEmptyField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestRestoreDb@5b5caf08]" started-at="2020-03-03T23:10:14 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:10:14 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestRestoreDb.testCreateRestoreDbRestoreFileNameEmptyField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateRestoreDbRestoreFileNameEmptyField status=SUCCESS method=TestRestoreDb.testCreateRestoreDbRestoreFileNameEmptyField()[pri:6, instance:TestPage.TestDashboard.Backup.TestRestoreDb@5b5caf08] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateRestoreDbSuffixFileNameEmptyField()[pri:7, instance:TestPage.TestDashboard.Backup.TestRestoreDb@5b5caf08]" started-at="2020-03-03T23:10:14 GMT+03:00" name="testCreateRestoreDbSuffixFileNameEmptyField" finished-at="2020-03-03T23:10:15 GMT+03:00" duration-ms="1392" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateRestoreDbSuffixFileNameEmptyField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestRestoreDb@5b5caf08]" started-at="2020-03-03T23:10:15 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:10:15 GMT+03:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestRestoreDb.testCreateRestoreDbSuffixFileNameEmptyField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateRestoreDbSuffixFileNameEmptyField status=SUCCESS method=TestRestoreDb.testCreateRestoreDbSuffixFileNameEmptyField()[pri:7, instance:TestPage.TestDashboard.Backup.TestRestoreDb@5b5caf08] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateRestoreDbLimitProcessTimeEmptyField()[pri:8, instance:TestPage.TestDashboard.Backup.TestRestoreDb@5b5caf08]" started-at="2020-03-03T23:10:15 GMT+03:00" name="testCreateRestoreDbLimitProcessTimeEmptyField" finished-at="2020-03-03T23:10:16 GMT+03:00" duration-ms="1334" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateRestoreDbLimitProcessTimeEmptyField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestRestoreDb@5b5caf08]" started-at="2020-03-03T23:10:16 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:10:16 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestRestoreDb.testCreateRestoreDbLimitProcessTimeEmptyField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateRestoreDbLimitProcessTimeEmptyField status=SUCCESS method=TestRestoreDb.testCreateRestoreDbLimitProcessTimeEmptyField()[pri:8, instance:TestPage.TestDashboard.Backup.TestRestoreDb@5b5caf08] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateRestoreDbMinFreeSpaceEmptyField()[pri:9, instance:TestPage.TestDashboard.Backup.TestRestoreDb@5b5caf08]" started-at="2020-03-03T23:10:17 GMT+03:00" name="testCreateRestoreDbMinFreeSpaceEmptyField" finished-at="2020-03-03T23:10:18 GMT+03:00" duration-ms="1342" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateRestoreDbMinFreeSpaceEmptyField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestRestoreDb@5b5caf08]" started-at="2020-03-03T23:10:18 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:10:18 GMT+03:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestRestoreDb.testCreateRestoreDbMinFreeSpaceEmptyField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateRestoreDbMinFreeSpaceEmptyField status=SUCCESS method=TestRestoreDb.testCreateRestoreDbMinFreeSpaceEmptyField()[pri:9, instance:TestPage.TestDashboard.Backup.TestRestoreDb@5b5caf08] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateRestoreDbCorrect()[pri:10, instance:TestPage.TestDashboard.Backup.TestRestoreDb@5b5caf08]" started-at="2020-03-03T23:10:18 GMT+03:00" name="testCreateRestoreDbCorrect" finished-at="2020-03-03T23:10:52 GMT+03:00" duration-ms="33842" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Status verified backup not OK expected [OK] but found [CRITICAL]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Status verified backup not OK expected [OK] but found [CRITICAL]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at TestPage.TestDashboard.Backup.TestRestoreDb.testCreateRestoreDbCorrect(TestRestoreDb.java:206)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateRestoreDbCorrect -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestRestoreDb@5b5caf08]" started-at="2020-03-03T23:10:52 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:10:52 GMT+03:00" duration-ms="710" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestRestoreDb.testCreateRestoreDbCorrect()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateRestoreDbCorrect status=FAILURE method=TestRestoreDb.testCreateRestoreDbCorrect()[pri:10, instance:TestPage.TestDashboard.Backup.TestRestoreDb@5b5caf08] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
      </class> <!-- TestPage.TestDashboard.Backup.TestRestoreDb -->
      <class name="TestPage.TestDashboard.Backup.TestDumpBackup">
        <test-method is-config="true" signature="classSetUp()[pri:0, instance:TestPage.TestDashboard.Backup.TestDumpBackup@4159e81b]" started-at="2020-03-03T23:09:21 GMT+03:00" name="classSetUp" finished-at="2020-03-03T23:09:24 GMT+03:00" duration-ms="2639" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classSetUp -->
        <test-method signature="testCreateDumpBackupScheduleIncorrect()[pri:1, instance:TestPage.TestDashboard.Backup.TestDumpBackup@4159e81b]" started-at="2020-03-03T23:09:24 GMT+03:00" name="testCreateDumpBackupScheduleIncorrect" finished-at="2020-03-03T23:09:25 GMT+03:00" duration-ms="727" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateDumpBackupScheduleIncorrect -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestDumpBackup@4159e81b]" started-at="2020-03-03T23:09:25 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:09:25 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestDumpBackup.testCreateDumpBackupScheduleIncorrect()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateDumpBackupScheduleIncorrect status=SUCCESS method=TestDumpBackup.testCreateDumpBackupScheduleIncorrect()[pri:1, instance:TestPage.TestDashboard.Backup.TestDumpBackup@4159e81b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateDumpBackupMinFreeSpaceEmpty()[pri:2, instance:TestPage.TestDashboard.Backup.TestDumpBackup@4159e81b]" started-at="2020-03-03T23:09:25 GMT+03:00" name="testCreateDumpBackupMinFreeSpaceEmpty" finished-at="2020-03-03T23:09:25 GMT+03:00" duration-ms="584" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateDumpBackupMinFreeSpaceEmpty -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestDumpBackup@4159e81b]" started-at="2020-03-03T23:09:25 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:09:25 GMT+03:00" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestDumpBackup.testCreateDumpBackupMinFreeSpaceEmpty()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateDumpBackupMinFreeSpaceEmpty status=SUCCESS method=TestDumpBackup.testCreateDumpBackupMinFreeSpaceEmpty()[pri:2, instance:TestPage.TestDashboard.Backup.TestDumpBackup@4159e81b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateDumpBackupPathFolderEmpty()[pri:3, instance:TestPage.TestDashboard.Backup.TestDumpBackup@4159e81b]" started-at="2020-03-03T23:09:25 GMT+03:00" name="testCreateDumpBackupPathFolderEmpty" finished-at="2020-03-03T23:09:26 GMT+03:00" duration-ms="602" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateDumpBackupPathFolderEmpty -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestDumpBackup@4159e81b]" started-at="2020-03-03T23:09:26 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:09:26 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestDumpBackup.testCreateDumpBackupPathFolderEmpty()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateDumpBackupPathFolderEmpty status=SUCCESS method=TestDumpBackup.testCreateDumpBackupPathFolderEmpty()[pri:3, instance:TestPage.TestDashboard.Backup.TestDumpBackup@4159e81b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateDumpBackupMaxNumbFilesEmpty()[pri:4, instance:TestPage.TestDashboard.Backup.TestDumpBackup@4159e81b]" started-at="2020-03-03T23:09:26 GMT+03:00" name="testCreateDumpBackupMaxNumbFilesEmpty" finished-at="2020-03-03T23:09:26 GMT+03:00" duration-ms="614" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateDumpBackupMaxNumbFilesEmpty -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestDumpBackup@4159e81b]" started-at="2020-03-03T23:09:26 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:09:26 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestDumpBackup.testCreateDumpBackupMaxNumbFilesEmpty()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateDumpBackupMaxNumbFilesEmpty status=SUCCESS method=TestDumpBackup.testCreateDumpBackupMaxNumbFilesEmpty()[pri:4, instance:TestPage.TestDashboard.Backup.TestDumpBackup@4159e81b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateDumpBackupCorrect()[pri:5, instance:TestPage.TestDashboard.Backup.TestDumpBackup@4159e81b]" started-at="2020-03-03T23:09:26 GMT+03:00" name="testCreateDumpBackupCorrect" finished-at="2020-03-03T23:09:59 GMT+03:00" duration-ms="32709" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateDumpBackupCorrect -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestDumpBackup@4159e81b]" started-at="2020-03-03T23:09:59 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:09:59 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestDumpBackup.testCreateDumpBackupCorrect()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateDumpBackupCorrect status=SUCCESS method=TestDumpBackup.testCreateDumpBackupCorrect()[pri:5, instance:TestPage.TestDashboard.Backup.TestDumpBackup@4159e81b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
      </class> <!-- TestPage.TestDashboard.Backup.TestDumpBackup -->
      <class name="TestPage.TestDashboard.Backup.TestVerifiedBackup">
        <test-method is-config="true" signature="classSetUp()[pri:0, instance:TestPage.TestDashboard.Backup.TestVerifiedBackup@143d9a93]" started-at="2020-03-03T23:07:47 GMT+03:00" name="classSetUp" finished-at="2020-03-03T23:07:50 GMT+03:00" duration-ms="3426" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classSetUp -->
        <test-method signature="testCreateVerifiedBackupScheduleIncorrect()[pri:1, instance:TestPage.TestDashboard.Backup.TestVerifiedBackup@143d9a93]" started-at="2020-03-03T23:07:50 GMT+03:00" name="testCreateVerifiedBackupScheduleIncorrect" finished-at="2020-03-03T23:07:52 GMT+03:00" duration-ms="1311" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateVerifiedBackupScheduleIncorrect -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestVerifiedBackup@143d9a93]" started-at="2020-03-03T23:07:52 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:07:52 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestVerifiedBackup.testCreateVerifiedBackupScheduleIncorrect()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateVerifiedBackupScheduleIncorrect status=SUCCESS method=TestVerifiedBackup.testCreateVerifiedBackupScheduleIncorrect()[pri:1, instance:TestPage.TestDashboard.Backup.TestVerifiedBackup@143d9a93] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateVerifiedBackupMaxNumbNegative()[pri:2, instance:TestPage.TestDashboard.Backup.TestVerifiedBackup@143d9a93]" started-at="2020-03-03T23:07:52 GMT+03:00" name="testCreateVerifiedBackupMaxNumbNegative" finished-at="2020-03-03T23:07:52 GMT+03:00" duration-ms="486" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateVerifiedBackupMaxNumbNegative -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestVerifiedBackup@143d9a93]" started-at="2020-03-03T23:07:52 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:07:52 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestVerifiedBackup.testCreateVerifiedBackupMaxNumbNegative()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateVerifiedBackupMaxNumbNegative status=SUCCESS method=TestVerifiedBackup.testCreateVerifiedBackupMaxNumbNegative()[pri:2, instance:TestPage.TestDashboard.Backup.TestVerifiedBackup@143d9a93] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateVerifiedBackupMaxNumbNotNumbers()[pri:3, instance:TestPage.TestDashboard.Backup.TestVerifiedBackup@143d9a93]" started-at="2020-03-03T23:07:52 GMT+03:00" name="testCreateVerifiedBackupMaxNumbNotNumbers" finished-at="2020-03-03T23:07:53 GMT+03:00" duration-ms="502" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateVerifiedBackupMaxNumbNotNumbers -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestVerifiedBackup@143d9a93]" started-at="2020-03-03T23:07:53 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:07:53 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestVerifiedBackup.testCreateVerifiedBackupMaxNumbNotNumbers()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateVerifiedBackupMaxNumbNotNumbers status=SUCCESS method=TestVerifiedBackup.testCreateVerifiedBackupMaxNumbNotNumbers()[pri:3, instance:TestPage.TestDashboard.Backup.TestVerifiedBackup@143d9a93] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateVerifiedBackupCorrect()[pri:4, instance:TestPage.TestDashboard.Backup.TestVerifiedBackup@143d9a93]" started-at="2020-03-03T23:07:53 GMT+03:00" name="testCreateVerifiedBackupCorrect" finished-at="2020-03-03T23:08:26 GMT+03:00" duration-ms="33761" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateVerifiedBackupCorrect -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestVerifiedBackup@143d9a93]" started-at="2020-03-03T23:08:26 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:08:26 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestVerifiedBackup.testCreateVerifiedBackupCorrect()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateVerifiedBackupCorrect status=SUCCESS method=TestVerifiedBackup.testCreateVerifiedBackupCorrect()[pri:4, instance:TestPage.TestDashboard.Backup.TestVerifiedBackup@143d9a93] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
      </class> <!-- TestPage.TestDashboard.Backup.TestVerifiedBackup -->
      <class name="TestPage.TestDashboard.Backup.TestIncrementalBackup">
        <test-method is-config="true" signature="classSetUp()[pri:0, instance:TestPage.TestDashboard.Backup.TestIncrementalBackup@40226788]" started-at="2020-03-03T23:08:26 GMT+03:00" name="classSetUp" finished-at="2020-03-03T23:08:32 GMT+03:00" duration-ms="5299" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classSetUp -->
        <test-method signature="testCreateIncrementalBackupMaxDurationEmpty()[pri:1, instance:TestPage.TestDashboard.Backup.TestIncrementalBackup@40226788]" started-at="2020-03-03T23:08:32 GMT+03:00" name="testCreateIncrementalBackupMaxDurationEmpty" finished-at="2020-03-03T23:08:35 GMT+03:00" duration-ms="3204" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateIncrementalBackupMaxDurationEmpty -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestIncrementalBackup@40226788]" started-at="2020-03-03T23:08:35 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:08:35 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestIncrementalBackup.testCreateIncrementalBackupMaxDurationEmpty()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateIncrementalBackupMaxDurationEmpty status=SUCCESS method=TestIncrementalBackup.testCreateIncrementalBackupMaxDurationEmpty()[pri:1, instance:TestPage.TestDashboard.Backup.TestIncrementalBackup@40226788] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateIncrementalBackupMinFreeSpaceEmpty()[pri:2, instance:TestPage.TestDashboard.Backup.TestIncrementalBackup@40226788]" started-at="2020-03-03T23:08:35 GMT+03:00" name="testCreateIncrementalBackupMinFreeSpaceEmpty" finished-at="2020-03-03T23:08:38 GMT+03:00" duration-ms="3023" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateIncrementalBackupMinFreeSpaceEmpty -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestIncrementalBackup@40226788]" started-at="2020-03-03T23:08:38 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:08:38 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestIncrementalBackup.testCreateIncrementalBackupMinFreeSpaceEmpty()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateIncrementalBackupMinFreeSpaceEmpty status=SUCCESS method=TestIncrementalBackup.testCreateIncrementalBackupMinFreeSpaceEmpty()[pri:2, instance:TestPage.TestDashboard.Backup.TestIncrementalBackup@40226788] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateIncrementalBackupPathFolderEmpty()[pri:3, instance:TestPage.TestDashboard.Backup.TestIncrementalBackup@40226788]" started-at="2020-03-03T23:08:38 GMT+03:00" name="testCreateIncrementalBackupPathFolderEmpty" finished-at="2020-03-03T23:08:41 GMT+03:00" duration-ms="3005" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateIncrementalBackupPathFolderEmpty -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestIncrementalBackup@40226788]" started-at="2020-03-03T23:08:41 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:08:41 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestIncrementalBackup.testCreateIncrementalBackupPathFolderEmpty()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateIncrementalBackupPathFolderEmpty status=SUCCESS method=TestIncrementalBackup.testCreateIncrementalBackupPathFolderEmpty()[pri:3, instance:TestPage.TestDashboard.Backup.TestIncrementalBackup@40226788] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateIncrementalBackupJournalFolderEmpty()[pri:4, instance:TestPage.TestDashboard.Backup.TestIncrementalBackup@40226788]" started-at="2020-03-03T23:08:41 GMT+03:00" name="testCreateIncrementalBackupJournalFolderEmpty" finished-at="2020-03-03T23:08:44 GMT+03:00" duration-ms="2988" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateIncrementalBackupJournalFolderEmpty -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestIncrementalBackup@40226788]" started-at="2020-03-03T23:08:44 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:08:44 GMT+03:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestIncrementalBackup.testCreateIncrementalBackupJournalFolderEmpty()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateIncrementalBackupJournalFolderEmpty status=SUCCESS method=TestIncrementalBackup.testCreateIncrementalBackupJournalFolderEmpty()[pri:4, instance:TestPage.TestDashboard.Backup.TestIncrementalBackup@40226788] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateIncrementalBackupPerformBackupEmpty()[pri:5, instance:TestPage.TestDashboard.Backup.TestIncrementalBackup@40226788]" started-at="2020-03-03T23:08:44 GMT+03:00" name="testCreateIncrementalBackupPerformBackupEmpty" finished-at="2020-03-03T23:08:46 GMT+03:00" duration-ms="2508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateIncrementalBackupPerformBackupEmpty -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestIncrementalBackup@40226788]" started-at="2020-03-03T23:08:46 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:08:46 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestIncrementalBackup.testCreateIncrementalBackupPerformBackupEmpty()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateIncrementalBackupPerformBackupEmpty status=SUCCESS method=TestIncrementalBackup.testCreateIncrementalBackupPerformBackupEmpty()[pri:5, instance:TestPage.TestDashboard.Backup.TestIncrementalBackup@40226788] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateIncrementalBackupCorrect()[pri:6, instance:TestPage.TestDashboard.Backup.TestIncrementalBackup@40226788]" started-at="2020-03-03T23:08:46 GMT+03:00" name="testCreateIncrementalBackupCorrect" finished-at="2020-03-03T23:09:21 GMT+03:00" duration-ms="34822" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateIncrementalBackupCorrect -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestIncrementalBackup@40226788]" started-at="2020-03-03T23:09:21 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:09:21 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestIncrementalBackup.testCreateIncrementalBackupCorrect()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateIncrementalBackupCorrect status=SUCCESS method=TestIncrementalBackup.testCreateIncrementalBackupCorrect()[pri:6, instance:TestPage.TestDashboard.Backup.TestIncrementalBackup@40226788] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
      </class> <!-- TestPage.TestDashboard.Backup.TestIncrementalBackup -->
    </test> <!-- Backup -->
    <test started-at="2020-03-03T23:12:14 GMT+03:00" name="CloudBackup" finished-at="2020-03-03T23:12:37 GMT+03:00" duration-ms="23153">
      <class name="TestPage.TestDashboard.Backup.TestCloudBackupReceiver">
        <test-method is-config="true" signature="classSetUp()[pri:0, instance:TestPage.TestDashboard.Backup.TestCloudBackupReceiver@5a101b1c]" started-at="2020-03-03T23:12:26 GMT+03:00" name="classSetUp" finished-at="2020-03-03T23:12:29 GMT+03:00" duration-ms="3188" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classSetUp -->
        <test-method signature="testCheckPeriodEmptyField()[pri:1, instance:TestPage.TestDashboard.Backup.TestCloudBackupReceiver@5a101b1c]" started-at="2020-03-03T23:12:29 GMT+03:00" name="testCheckPeriodEmptyField" finished-at="2020-03-03T23:12:31 GMT+03:00" duration-ms="2233" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckPeriodEmptyField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestCloudBackupReceiver@5a101b1c]" started-at="2020-03-03T23:12:31 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:12:31 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestCloudBackupReceiver.testCheckPeriodEmptyField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckPeriodEmptyField status=SUCCESS method=TestCloudBackupReceiver.testCheckPeriodEmptyField()[pri:1, instance:TestPage.TestDashboard.Backup.TestCloudBackupReceiver@5a101b1c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckWatchIncomingFilesEmptyField()[pri:2, instance:TestPage.TestDashboard.Backup.TestCloudBackupReceiver@5a101b1c]" started-at="2020-03-03T23:12:31 GMT+03:00" name="testCheckWatchIncomingFilesEmptyField" finished-at="2020-03-03T23:12:32 GMT+03:00" duration-ms="975" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckWatchIncomingFilesEmptyField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestCloudBackupReceiver@5a101b1c]" started-at="2020-03-03T23:12:32 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:12:32 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestCloudBackupReceiver.testCheckWatchIncomingFilesEmptyField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckWatchIncomingFilesEmptyField status=SUCCESS method=TestCloudBackupReceiver.testCheckWatchIncomingFilesEmptyField()[pri:2, instance:TestPage.TestDashboard.Backup.TestCloudBackupReceiver@5a101b1c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckFilenameTemplateEmptyField()[pri:3, instance:TestPage.TestDashboard.Backup.TestCloudBackupReceiver@5a101b1c]" started-at="2020-03-03T23:12:32 GMT+03:00" name="testCheckFilenameTemplateEmptyField" finished-at="2020-03-03T23:12:33 GMT+03:00" duration-ms="951" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckFilenameTemplateEmptyField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestCloudBackupReceiver@5a101b1c]" started-at="2020-03-03T23:12:33 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:12:33 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestCloudBackupReceiver.testCheckFilenameTemplateEmptyField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckFilenameTemplateEmptyField status=SUCCESS method=TestCloudBackupReceiver.testCheckFilenameTemplateEmptyField()[pri:3, instance:TestPage.TestDashboard.Backup.TestCloudBackupReceiver@5a101b1c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckExtensionPackedFilesEmptyField()[pri:4, instance:TestPage.TestDashboard.Backup.TestCloudBackupReceiver@5a101b1c]" started-at="2020-03-03T23:12:33 GMT+03:00" name="testCheckExtensionPackedFilesEmptyField" finished-at="2020-03-03T23:12:34 GMT+03:00" duration-ms="916" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckExtensionPackedFilesEmptyField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestCloudBackupReceiver@5a101b1c]" started-at="2020-03-03T23:12:34 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:12:34 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestCloudBackupReceiver.testCheckExtensionPackedFilesEmptyField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckExtensionPackedFilesEmptyField status=SUCCESS method=TestCloudBackupReceiver.testCheckExtensionPackedFilesEmptyField()[pri:4, instance:TestPage.TestDashboard.Backup.TestCloudBackupReceiver@5a101b1c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckDecryptPasswordEmptyField()[pri:5, instance:TestPage.TestDashboard.Backup.TestCloudBackupReceiver@5a101b1c]" started-at="2020-03-03T23:12:34 GMT+03:00" name="testCheckDecryptPasswordEmptyField" finished-at="2020-03-03T23:12:35 GMT+03:00" duration-ms="997" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckDecryptPasswordEmptyField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestCloudBackupReceiver@5a101b1c]" started-at="2020-03-03T23:12:35 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:12:35 GMT+03:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestCloudBackupReceiver.testCheckDecryptPasswordEmptyField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckDecryptPasswordEmptyField status=SUCCESS method=TestCloudBackupReceiver.testCheckDecryptPasswordEmptyField()[pri:5, instance:TestPage.TestDashboard.Backup.TestCloudBackupReceiver@5a101b1c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckAlertFileCountIncorrectValue()[pri:6, instance:TestPage.TestDashboard.Backup.TestCloudBackupReceiver@5a101b1c]" started-at="2020-03-03T23:12:35 GMT+03:00" name="testCheckAlertFileCountIncorrectValue" finished-at="2020-03-03T23:12:36 GMT+03:00" duration-ms="1043" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckAlertFileCountIncorrectValue -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestCloudBackupReceiver@5a101b1c]" started-at="2020-03-03T23:12:36 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:12:36 GMT+03:00" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestCloudBackupReceiver.testCheckAlertFileCountIncorrectValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckAlertFileCountIncorrectValue status=SUCCESS method=TestCloudBackupReceiver.testCheckAlertFileCountIncorrectValue()[pri:6, instance:TestPage.TestDashboard.Backup.TestCloudBackupReceiver@5a101b1c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckAlertFileAgeEmptyField()[pri:7, instance:TestPage.TestDashboard.Backup.TestCloudBackupReceiver@5a101b1c]" started-at="2020-03-03T23:12:36 GMT+03:00" name="testCheckAlertFileAgeEmptyField" finished-at="2020-03-03T23:12:37 GMT+03:00" duration-ms="1002" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckAlertFileAgeEmptyField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestCloudBackupReceiver@5a101b1c]" started-at="2020-03-03T23:12:37 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:12:37 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestCloudBackupReceiver.testCheckAlertFileAgeEmptyField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckAlertFileAgeEmptyField status=SUCCESS method=TestCloudBackupReceiver.testCheckAlertFileAgeEmptyField()[pri:7, instance:TestPage.TestDashboard.Backup.TestCloudBackupReceiver@5a101b1c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
      </class> <!-- TestPage.TestDashboard.Backup.TestCloudBackupReceiver -->
      <class name="TestPage.TestDashboard.Backup.TestCloudBackup">
        <test-method is-config="true" signature="classSetUp()[pri:0, instance:TestPage.TestDashboard.Backup.TestCloudBackup@389562d6]" started-at="2020-03-03T23:12:14 GMT+03:00" name="classSetUp" finished-at="2020-03-03T23:12:17 GMT+03:00" duration-ms="3095" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classSetUp -->
        <test-method signature="testCheckPeriodEmptyField()[pri:1, instance:TestPage.TestDashboard.Backup.TestCloudBackup@389562d6]" started-at="2020-03-03T23:12:17 GMT+03:00" name="testCheckPeriodEmptyField" finished-at="2020-03-03T23:12:17 GMT+03:00" duration-ms="276" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckPeriodEmptyField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestCloudBackup@389562d6]" started-at="2020-03-03T23:12:17 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:12:17 GMT+03:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestCloudBackup.testCheckPeriodEmptyField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckPeriodEmptyField status=SUCCESS method=TestCloudBackup.testCheckPeriodEmptyField()[pri:1, instance:TestPage.TestDashboard.Backup.TestCloudBackup@389562d6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckMonitorFolderEmptyField()[pri:2, instance:TestPage.TestDashboard.Backup.TestCloudBackup@389562d6]" started-at="2020-03-03T23:12:17 GMT+03:00" name="testCheckMonitorFolderEmptyField" finished-at="2020-03-03T23:12:18 GMT+03:00" duration-ms="785" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckMonitorFolderEmptyField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestCloudBackup@389562d6]" started-at="2020-03-03T23:12:18 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:12:18 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestCloudBackup.testCheckMonitorFolderEmptyField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckMonitorFolderEmptyField status=SUCCESS method=TestCloudBackup.testCheckMonitorFolderEmptyField()[pri:2, instance:TestPage.TestDashboard.Backup.TestCloudBackup@389562d6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckFilenameTemplateEmptyField()[pri:3, instance:TestPage.TestDashboard.Backup.TestCloudBackup@389562d6]" started-at="2020-03-03T23:12:18 GMT+03:00" name="testCheckFilenameTemplateEmptyField" finished-at="2020-03-03T23:12:19 GMT+03:00" duration-ms="789" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckFilenameTemplateEmptyField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestCloudBackup@389562d6]" started-at="2020-03-03T23:12:19 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:12:19 GMT+03:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestCloudBackup.testCheckFilenameTemplateEmptyField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckFilenameTemplateEmptyField status=SUCCESS method=TestCloudBackup.testCheckFilenameTemplateEmptyField()[pri:3, instance:TestPage.TestDashboard.Backup.TestCloudBackup@389562d6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckFiledConnectionFtpEmptyField()[pri:4, instance:TestPage.TestDashboard.Backup.TestCloudBackup@389562d6]" started-at="2020-03-03T23:12:19 GMT+03:00" name="testCheckFiledConnectionFtpEmptyField" finished-at="2020-03-03T23:12:19 GMT+03:00" duration-ms="762" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckFiledConnectionFtpEmptyField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestCloudBackup@389562d6]" started-at="2020-03-03T23:12:19 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:12:19 GMT+03:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestCloudBackup.testCheckFiledConnectionFtpEmptyField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckFiledConnectionFtpEmptyField status=SUCCESS method=TestCloudBackup.testCheckFiledConnectionFtpEmptyField()[pri:4, instance:TestPage.TestDashboard.Backup.TestCloudBackup@389562d6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckKeepNSourceFilesFieldEmptyField()[pri:5, instance:TestPage.TestDashboard.Backup.TestCloudBackup@389562d6]" started-at="2020-03-03T23:12:19 GMT+03:00" name="testCheckKeepNSourceFilesFieldEmptyField" finished-at="2020-03-03T23:12:20 GMT+03:00" duration-ms="756" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckKeepNSourceFilesFieldEmptyField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestCloudBackup@389562d6]" started-at="2020-03-03T23:12:20 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:12:20 GMT+03:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestCloudBackup.testCheckKeepNSourceFilesFieldEmptyField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckKeepNSourceFilesFieldEmptyField status=SUCCESS method=TestCloudBackup.testCheckKeepNSourceFilesFieldEmptyField()[pri:5, instance:TestPage.TestDashboard.Backup.TestCloudBackup@389562d6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckFtpServerEmptyField()[pri:6, instance:TestPage.TestDashboard.Backup.TestCloudBackup@389562d6]" started-at="2020-03-03T23:12:20 GMT+03:00" name="testCheckFtpServerEmptyField" finished-at="2020-03-03T23:12:24 GMT+03:00" duration-ms="3850" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckFtpServerEmptyField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestCloudBackup@389562d6]" started-at="2020-03-03T23:12:24 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:12:24 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestCloudBackup.testCheckFtpServerEmptyField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckFtpServerEmptyField status=SUCCESS method=TestCloudBackup.testCheckFtpServerEmptyField()[pri:6, instance:TestPage.TestDashboard.Backup.TestCloudBackup@389562d6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckFtpPortEmptyField()[pri:7, instance:TestPage.TestDashboard.Backup.TestCloudBackup@389562d6]" started-at="2020-03-03T23:12:24 GMT+03:00" name="testCheckFtpPortEmptyField" finished-at="2020-03-03T23:12:26 GMT+03:00" duration-ms="1476" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckFtpPortEmptyField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Backup.TestCloudBackup@389562d6]" started-at="2020-03-03T23:12:26 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:12:26 GMT+03:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Backup.TestCloudBackup.testCheckFtpPortEmptyField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckFtpPortEmptyField status=SUCCESS method=TestCloudBackup.testCheckFtpPortEmptyField()[pri:7, instance:TestPage.TestDashboard.Backup.TestCloudBackup@389562d6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
      </class> <!-- TestPage.TestDashboard.Backup.TestCloudBackup -->
    </test> <!-- CloudBackup -->
    <test started-at="2020-03-03T23:12:37 GMT+03:00" name="Transactions" finished-at="2020-03-03T23:12:45 GMT+03:00" duration-ms="7954">
      <class name="TestPage.TestDashboard.TestTransactions">
        <test-method is-config="true" signature="classSetUp()[pri:0, instance:TestPage.TestDashboard.TestTransactions@6d64b553]" started-at="2020-03-03T23:12:37 GMT+03:00" name="classSetUp" finished-at="2020-03-03T23:12:42 GMT+03:00" duration-ms="5020" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classSetUp -->
        <test-method signature="testCheckPeriodEmptyField()[pri:1, instance:TestPage.TestDashboard.TestTransactions@6d64b553]" started-at="2020-03-03T23:12:42 GMT+03:00" name="testCheckPeriodEmptyField" finished-at="2020-03-03T23:12:43 GMT+03:00" duration-ms="1310" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckPeriodEmptyField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestTransactions@6d64b553]" started-at="2020-03-03T23:12:43 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:12:43 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestTransactions.testCheckPeriodEmptyField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckPeriodEmptyField status=SUCCESS method=TestTransactions.testCheckPeriodEmptyField()[pri:1, instance:TestPage.TestDashboard.TestTransactions@6d64b553] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckFiledAlterOSTOITMoreEmptyField()[pri:2, instance:TestPage.TestDashboard.TestTransactions@6d64b553]" started-at="2020-03-03T23:12:43 GMT+03:00" name="testCheckFiledAlterOSTOITMoreEmptyField" finished-at="2020-03-03T23:12:44 GMT+03:00" duration-ms="572" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckFiledAlterOSTOITMoreEmptyField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestTransactions@6d64b553]" started-at="2020-03-03T23:12:44 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:12:44 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestTransactions.testCheckFiledAlterOSTOITMoreEmptyField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckFiledAlterOSTOITMoreEmptyField status=SUCCESS method=TestTransactions.testCheckFiledAlterOSTOITMoreEmptyField()[pri:2, instance:TestPage.TestDashboard.TestTransactions@6d64b553] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckFiledMaxTransactionsEmptyField()[pri:2, instance:TestPage.TestDashboard.TestTransactions@6d64b553]" started-at="2020-03-03T23:12:44 GMT+03:00" name="testCheckFiledMaxTransactionsEmptyField" finished-at="2020-03-03T23:12:44 GMT+03:00" duration-ms="537" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckFiledMaxTransactionsEmptyField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestTransactions@6d64b553]" started-at="2020-03-03T23:12:44 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:12:44 GMT+03:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestTransactions.testCheckFiledMaxTransactionsEmptyField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckFiledMaxTransactionsEmptyField status=SUCCESS method=TestTransactions.testCheckFiledMaxTransactionsEmptyField()[pri:2, instance:TestPage.TestDashboard.TestTransactions@6d64b553] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckFiledAlterNextOATMoreEmptyField()[pri:3, instance:TestPage.TestDashboard.TestTransactions@6d64b553]" started-at="2020-03-03T23:12:44 GMT+03:00" name="testCheckFiledAlterNextOATMoreEmptyField" finished-at="2020-03-03T23:12:45 GMT+03:00" duration-ms="502" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckFiledAlterNextOATMoreEmptyField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestTransactions@6d64b553]" started-at="2020-03-03T23:12:45 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:12:45 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestTransactions.testCheckFiledAlterNextOATMoreEmptyField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckFiledAlterNextOATMoreEmptyField status=SUCCESS method=TestTransactions.testCheckFiledAlterNextOATMoreEmptyField()[pri:3, instance:TestPage.TestDashboard.TestTransactions@6d64b553] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
      </class> <!-- TestPage.TestDashboard.TestTransactions -->
    </test> <!-- Transactions -->
    <test started-at="2020-03-03T23:12:45 GMT+03:00" name="Lockprint" finished-at="2020-03-03T23:13:01 GMT+03:00" duration-ms="15839">
      <class name="TestPage.TestDashboard.TestLockprint">
        <test-method is-config="true" signature="classSetUp()[pri:0, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:12:45 GMT+03:00" name="classSetUp" finished-at="2020-03-03T23:12:48 GMT+03:00" duration-ms="3143" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classSetUp -->
        <test-method signature="testCheckPeriodEmptyField()[pri:1, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:12:48 GMT+03:00" name="testCheckPeriodEmptyField" finished-at="2020-03-03T23:12:48 GMT+03:00" duration-ms="343" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckPeriodEmptyField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:12:48 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:12:48 GMT+03:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestLockprint.testCheckPeriodEmptyField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckPeriodEmptyField status=SUCCESS method=TestLockprint.testCheckPeriodEmptyField()[pri:1, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckFiledDeadlockScansThresholdEmptyValue()[pri:2, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:12:48 GMT+03:00" name="testCheckFiledDeadlockScansThresholdEmptyValue" finished-at="2020-03-03T23:12:50 GMT+03:00" duration-ms="1084" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckFiledDeadlockScansThresholdEmptyValue -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:12:50 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:12:50 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestLockprint.testCheckFiledDeadlockScansThresholdEmptyValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckFiledDeadlockScansThresholdEmptyValue status=SUCCESS method=TestLockprint.testCheckFiledDeadlockScansThresholdEmptyValue()[pri:2, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateFiledDeadlockScansThresholdNumbNegativeValue()[pri:3, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:12:50 GMT+03:00" name="testCreateFiledDeadlockScansThresholdNumbNegativeValue" finished-at="2020-03-03T23:12:50 GMT+03:00" duration-ms="245" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateFiledDeadlockScansThresholdNumbNegativeValue -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:12:50 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:12:50 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestLockprint.testCreateFiledDeadlockScansThresholdNumbNegativeValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateFiledDeadlockScansThresholdNumbNegativeValue status=SUCCESS method=TestLockprint.testCreateFiledDeadlockScansThresholdNumbNegativeValue()[pri:3, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckFiledDeadlockThresholdEmptyValue()[pri:4, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:12:50 GMT+03:00" name="testCheckFiledDeadlockThresholdEmptyValue" finished-at="2020-03-03T23:12:51 GMT+03:00" duration-ms="934" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckFiledDeadlockThresholdEmptyValue -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:12:51 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:12:51 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestLockprint.testCheckFiledDeadlockThresholdEmptyValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckFiledDeadlockThresholdEmptyValue status=SUCCESS method=TestLockprint.testCheckFiledDeadlockThresholdEmptyValue()[pri:4, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateFiledDeadlockThresholdNumbNegativeValue()[pri:5, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:12:51 GMT+03:00" name="testCreateFiledDeadlockThresholdNumbNegativeValue" finished-at="2020-03-03T23:12:51 GMT+03:00" duration-ms="262" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateFiledDeadlockThresholdNumbNegativeValue -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:12:51 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:12:51 GMT+03:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestLockprint.testCreateFiledDeadlockThresholdNumbNegativeValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateFiledDeadlockThresholdNumbNegativeValue status=SUCCESS method=TestLockprint.testCreateFiledDeadlockThresholdNumbNegativeValue()[pri:5, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckFiledMutexWaitThresholdEmptyValue()[pri:6, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:12:51 GMT+03:00" name="testCheckFiledMutexWaitThresholdEmptyValue" finished-at="2020-03-03T23:12:52 GMT+03:00" duration-ms="944" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckFiledMutexWaitThresholdEmptyValue -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:12:52 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:12:52 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestLockprint.testCheckFiledMutexWaitThresholdEmptyValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckFiledMutexWaitThresholdEmptyValue status=SUCCESS method=TestLockprint.testCheckFiledMutexWaitThresholdEmptyValue()[pri:6, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateFiledMutexWaitThresholdNumbNegativeValue()[pri:7, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:12:52 GMT+03:00" name="testCreateFiledMutexWaitThresholdNumbNegativeValue" finished-at="2020-03-03T23:12:52 GMT+03:00" duration-ms="298" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateFiledMutexWaitThresholdNumbNegativeValue -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:12:52 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:12:52 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestLockprint.testCreateFiledMutexWaitThresholdNumbNegativeValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateFiledMutexWaitThresholdNumbNegativeValue status=SUCCESS method=TestLockprint.testCreateFiledMutexWaitThresholdNumbNegativeValue()[pri:7, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckFiledHashSlotsEmptyValue()[pri:8, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:12:52 GMT+03:00" name="testCheckFiledHashSlotsEmptyValue" finished-at="2020-03-03T23:12:53 GMT+03:00" duration-ms="923" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckFiledHashSlotsEmptyValue -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:12:53 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:12:53 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestLockprint.testCheckFiledHashSlotsEmptyValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckFiledHashSlotsEmptyValue status=SUCCESS method=TestLockprint.testCheckFiledHashSlotsEmptyValue()[pri:8, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateFiledHashSlotsNumbNegativeValue()[pri:9, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:12:53 GMT+03:00" name="testCreateFiledHashSlotsNumbNegativeValue" finished-at="2020-03-03T23:12:53 GMT+03:00" duration-ms="281" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateFiledHashSlotsNumbNegativeValue -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:12:53 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:12:53 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestLockprint.testCreateFiledHashSlotsNumbNegativeValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateFiledHashSlotsNumbNegativeValue status=SUCCESS method=TestLockprint.testCreateFiledHashSlotsNumbNegativeValue()[pri:9, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckFiledMinLengthEmptyValue()[pri:10, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:12:53 GMT+03:00" name="testCheckFiledMinLengthEmptyValue" finished-at="2020-03-03T23:12:54 GMT+03:00" duration-ms="894" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckFiledMinLengthEmptyValue -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:12:54 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:12:54 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestLockprint.testCheckFiledMinLengthEmptyValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckFiledMinLengthEmptyValue status=SUCCESS method=TestLockprint.testCheckFiledMinLengthEmptyValue()[pri:10, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateFiledMinLengthNumbNegativeValue()[pri:11, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:12:54 GMT+03:00" name="testCreateFiledMinLengthNumbNegativeValue" finished-at="2020-03-03T23:12:55 GMT+03:00" duration-ms="262" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateFiledMinLengthNumbNegativeValue -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:12:55 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:12:55 GMT+03:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestLockprint.testCreateFiledMinLengthNumbNegativeValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateFiledMinLengthNumbNegativeValue status=SUCCESS method=TestLockprint.testCreateFiledMinLengthNumbNegativeValue()[pri:11, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckFiledAverageLengthEmptyValue()[pri:12, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:12:55 GMT+03:00" name="testCheckFiledAverageLengthEmptyValue" finished-at="2020-03-03T23:12:55 GMT+03:00" duration-ms="900" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckFiledAverageLengthEmptyValue -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:12:55 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:12:55 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestLockprint.testCheckFiledAverageLengthEmptyValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckFiledAverageLengthEmptyValue status=SUCCESS method=TestLockprint.testCheckFiledAverageLengthEmptyValue()[pri:12, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateFiledAverageLengthNumbNegativeValue()[pri:13, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:12:55 GMT+03:00" name="testCreateFiledAverageLengthNumbNegativeValue" finished-at="2020-03-03T23:12:56 GMT+03:00" duration-ms="282" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateFiledAverageLengthNumbNegativeValue -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:12:56 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:12:56 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestLockprint.testCreateFiledAverageLengthNumbNegativeValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateFiledAverageLengthNumbNegativeValue status=SUCCESS method=TestLockprint.testCreateFiledAverageLengthNumbNegativeValue()[pri:13, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckFiledOwnersLimitEmptyValue()[pri:14, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:12:56 GMT+03:00" name="testCheckFiledOwnersLimitEmptyValue" finished-at="2020-03-03T23:12:57 GMT+03:00" duration-ms="916" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckFiledOwnersLimitEmptyValue -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:12:57 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:12:57 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestLockprint.testCheckFiledOwnersLimitEmptyValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckFiledOwnersLimitEmptyValue status=SUCCESS method=TestLockprint.testCheckFiledOwnersLimitEmptyValue()[pri:14, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateFiledOwnersLimitNumbNegativeValue()[pri:15, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:12:57 GMT+03:00" name="testCreateFiledOwnersLimitNumbNegativeValue" finished-at="2020-03-03T23:12:57 GMT+03:00" duration-ms="259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateFiledOwnersLimitNumbNegativeValue -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:12:57 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:12:57 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestLockprint.testCreateFiledOwnersLimitNumbNegativeValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateFiledOwnersLimitNumbNegativeValue status=SUCCESS method=TestLockprint.testCreateFiledOwnersLimitNumbNegativeValue()[pri:15, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckFiledFreeOwnersLimitEmptyValue()[pri:16, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:12:57 GMT+03:00" name="testCheckFiledFreeOwnersLimitEmptyValue" finished-at="2020-03-03T23:12:58 GMT+03:00" duration-ms="928" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckFiledFreeOwnersLimitEmptyValue -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:12:58 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:12:58 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestLockprint.testCheckFiledFreeOwnersLimitEmptyValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckFiledFreeOwnersLimitEmptyValue status=SUCCESS method=TestLockprint.testCheckFiledFreeOwnersLimitEmptyValue()[pri:16, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateFiledFreeOwnersLimitNumbNegativeValue()[pri:17, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:12:58 GMT+03:00" name="testCreateFiledFreeOwnersLimitNumbNegativeValue" finished-at="2020-03-03T23:12:58 GMT+03:00" duration-ms="263" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateFiledFreeOwnersLimitNumbNegativeValue -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:12:58 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:12:58 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestLockprint.testCreateFiledFreeOwnersLimitNumbNegativeValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateFiledFreeOwnersLimitNumbNegativeValue status=SUCCESS method=TestLockprint.testCreateFiledFreeOwnersLimitNumbNegativeValue()[pri:17, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckFiledLockTableSizeEmptyValue()[pri:18, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:12:58 GMT+03:00" name="testCheckFiledLockTableSizeEmptyValue" finished-at="2020-03-03T23:12:59 GMT+03:00" duration-ms="920" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckFiledLockTableSizeEmptyValue -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:12:59 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:12:59 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestLockprint.testCheckFiledLockTableSizeEmptyValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckFiledLockTableSizeEmptyValue status=SUCCESS method=TestLockprint.testCheckFiledLockTableSizeEmptyValue()[pri:18, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateFiledLockTableSizeNumbNegativeValue()[pri:19, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:12:59 GMT+03:00" name="testCreateFiledLockTableSizeNumbNegativeValue" finished-at="2020-03-03T23:12:59 GMT+03:00" duration-ms="247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateFiledLockTableSizeNumbNegativeValue -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:12:59 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:12:59 GMT+03:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestLockprint.testCreateFiledLockTableSizeNumbNegativeValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateFiledLockTableSizeNumbNegativeValue status=SUCCESS method=TestLockprint.testCreateFiledLockTableSizeNumbNegativeValue()[pri:19, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckFiledBuffersMaxEmptyValue()[pri:20, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:12:59 GMT+03:00" name="testCheckFiledBuffersMaxEmptyValue" finished-at="2020-03-03T23:13:00 GMT+03:00" duration-ms="1179" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckFiledBuffersMaxEmptyValue -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:13:00 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:13:00 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestLockprint.testCheckFiledBuffersMaxEmptyValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckFiledBuffersMaxEmptyValue status=SUCCESS method=TestLockprint.testCheckFiledBuffersMaxEmptyValue()[pri:20, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateFiledBuffersMaxNumbNegativeValue()[pri:21, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:13:00 GMT+03:00" name="testCreateFiledBuffersMaxNumbNegativeValue" finished-at="2020-03-03T23:13:01 GMT+03:00" duration-ms="271" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateFiledBuffersMaxNumbNegativeValue -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9]" started-at="2020-03-03T23:13:01 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:13:01 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestLockprint.testCreateFiledBuffersMaxNumbNegativeValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateFiledBuffersMaxNumbNegativeValue status=SUCCESS method=TestLockprint.testCreateFiledBuffersMaxNumbNegativeValue()[pri:21, instance:TestPage.TestDashboard.TestLockprint@5eccd3b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
      </class> <!-- TestPage.TestDashboard.TestLockprint -->
    </test> <!-- Lockprint -->
    <test started-at="2020-03-03T23:13:01 GMT+03:00" name="SweepSchedule" finished-at="2020-03-03T23:13:07 GMT+03:00" duration-ms="5796">
      <class name="TestPage.TestDashboard.TestSweepSchedule">
        <test-method is-config="true" signature="classSetUp()[pri:0, instance:TestPage.TestDashboard.TestSweepSchedule@7ed9ae94]" started-at="2020-03-03T23:13:01 GMT+03:00" name="classSetUp" finished-at="2020-03-03T23:13:04 GMT+03:00" duration-ms="2725" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classSetUp -->
        <test-method signature="testCheckPeriodEmptyField()[pri:1, instance:TestPage.TestDashboard.TestSweepSchedule@7ed9ae94]" started-at="2020-03-03T23:13:04 GMT+03:00" name="testCheckPeriodEmptyField" finished-at="2020-03-03T23:13:05 GMT+03:00" duration-ms="1311" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckPeriodEmptyField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestSweepSchedule@7ed9ae94]" started-at="2020-03-03T23:13:05 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:13:05 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestSweepSchedule.testCheckPeriodEmptyField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckPeriodEmptyField status=SUCCESS method=TestSweepSchedule.testCheckPeriodEmptyField()[pri:1, instance:TestPage.TestDashboard.TestSweepSchedule@7ed9ae94] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckFiledDeadlockScansThresholdEmptyValue()[pri:2, instance:TestPage.TestDashboard.TestSweepSchedule@7ed9ae94]" started-at="2020-03-03T23:13:05 GMT+03:00" name="testCheckFiledDeadlockScansThresholdEmptyValue" finished-at="2020-03-03T23:13:06 GMT+03:00" duration-ms="1502" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckFiledDeadlockScansThresholdEmptyValue -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestSweepSchedule@7ed9ae94]" started-at="2020-03-03T23:13:06 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:13:06 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestSweepSchedule.testCheckFiledDeadlockScansThresholdEmptyValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckFiledDeadlockScansThresholdEmptyValue status=SUCCESS method=TestSweepSchedule.testCheckFiledDeadlockScansThresholdEmptyValue()[pri:2, instance:TestPage.TestDashboard.TestSweepSchedule@7ed9ae94] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateFiledDeadlockScansThresholdNumbNegativeValue()[pri:3, instance:TestPage.TestDashboard.TestSweepSchedule@7ed9ae94]" started-at="2020-03-03T23:13:06 GMT+03:00" name="testCreateFiledDeadlockScansThresholdNumbNegativeValue" finished-at="2020-03-03T23:13:07 GMT+03:00" duration-ms="250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateFiledDeadlockScansThresholdNumbNegativeValue -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestSweepSchedule@7ed9ae94]" started-at="2020-03-03T23:13:07 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:13:07 GMT+03:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestSweepSchedule.testCreateFiledDeadlockScansThresholdNumbNegativeValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateFiledDeadlockScansThresholdNumbNegativeValue status=SUCCESS method=TestSweepSchedule.testCreateFiledDeadlockScansThresholdNumbNegativeValue()[pri:3, instance:TestPage.TestDashboard.TestSweepSchedule@7ed9ae94] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
      </class> <!-- TestPage.TestDashboard.TestSweepSchedule -->
    </test> <!-- SweepSchedule -->
    <test started-at="2020-03-03T23:13:07 GMT+03:00" name="Delta" finished-at="2020-03-03T23:13:12 GMT+03:00" duration-ms="5342">
      <class name="TestPage.TestDashboard.TestDelta">
        <test-method is-config="true" signature="classSetUp()[pri:0, instance:TestPage.TestDashboard.TestDelta@591fd34d]" started-at="2020-03-03T23:13:07 GMT+03:00" name="classSetUp" finished-at="2020-03-03T23:13:09 GMT+03:00" duration-ms="2694" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classSetUp -->
        <test-method signature="testCheckPeriodEmptyField()[pri:1, instance:TestPage.TestDashboard.TestDelta@591fd34d]" started-at="2020-03-03T23:13:09 GMT+03:00" name="testCheckPeriodEmptyField" finished-at="2020-03-03T23:13:11 GMT+03:00" duration-ms="1332" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckPeriodEmptyField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestDelta@591fd34d]" started-at="2020-03-03T23:13:11 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:13:11 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestDelta.testCheckPeriodEmptyField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckPeriodEmptyField status=SUCCESS method=TestDelta.testCheckPeriodEmptyField()[pri:1, instance:TestPage.TestDashboard.TestDelta@591fd34d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckFiledMaxDeltaBytesEmptyValue()[pri:2, instance:TestPage.TestDashboard.TestDelta@591fd34d]" started-at="2020-03-03T23:13:11 GMT+03:00" name="testCheckFiledMaxDeltaBytesEmptyValue" finished-at="2020-03-03T23:13:11 GMT+03:00" duration-ms="453" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckFiledMaxDeltaBytesEmptyValue -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestDelta@591fd34d]" started-at="2020-03-03T23:13:11 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:13:11 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestDelta.testCheckFiledMaxDeltaBytesEmptyValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckFiledMaxDeltaBytesEmptyValue status=SUCCESS method=TestDelta.testCheckFiledMaxDeltaBytesEmptyValue()[pri:2, instance:TestPage.TestDashboard.TestDelta@591fd34d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckFiledMaxDeltaMinutesEmptyValue()[pri:2, instance:TestPage.TestDashboard.TestDelta@591fd34d]" started-at="2020-03-03T23:13:11 GMT+03:00" name="testCheckFiledMaxDeltaMinutesEmptyValue" finished-at="2020-03-03T23:13:12 GMT+03:00" duration-ms="476" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[value must be a number expected ["" is not an integer number] but found ["NaN" is not an integer number]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: value must be a number expected ["" is not an integer number] but found ["NaN" is not an integer number]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at TestPage.TestDashboard.TestDelta.testCheckFiledMaxDeltaMinutesEmptyValue(TestDelta.java:87)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckFiledMaxDeltaMinutesEmptyValue -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestDelta@591fd34d]" started-at="2020-03-03T23:13:12 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:13:12 GMT+03:00" duration-ms="379" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestDelta.testCheckFiledMaxDeltaMinutesEmptyValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckFiledMaxDeltaMinutesEmptyValue status=FAILURE method=TestDelta.testCheckFiledMaxDeltaMinutesEmptyValue()[pri:2, instance:TestPage.TestDashboard.TestDelta@591fd34d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
      </class> <!-- TestPage.TestDashboard.TestDelta -->
    </test> <!-- Delta -->
    <test started-at="2020-03-03T23:13:12 GMT+03:00" name="DiskSpace" finished-at="2020-03-03T23:13:19 GMT+03:00" duration-ms="6585">
      <class name="TestPage.TestDashboard.TestDiskSpace">
        <test-method is-config="true" signature="classSetUp()[pri:0, instance:TestPage.TestDashboard.TestDiskSpace@6ecd665]" started-at="2020-03-03T23:13:12 GMT+03:00" name="classSetUp" finished-at="2020-03-03T23:13:16 GMT+03:00" duration-ms="4347" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classSetUp -->
        <test-method signature="testCheckPeriodEmptyField()[pri:1, instance:TestPage.TestDashboard.TestDiskSpace@6ecd665]" started-at="2020-03-03T23:13:16 GMT+03:00" name="testCheckPeriodEmptyField" finished-at="2020-03-03T23:13:18 GMT+03:00" duration-ms="1320" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckPeriodEmptyField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestDiskSpace@6ecd665]" started-at="2020-03-03T23:13:18 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:13:18 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestDiskSpace.testCheckPeriodEmptyField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckPeriodEmptyField status=SUCCESS method=TestDiskSpace.testCheckPeriodEmptyField()[pri:1, instance:TestPage.TestDashboard.TestDiskSpace@6ecd665] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckFiledMaxDeltaBytesEmptyValue()[pri:2, instance:TestPage.TestDashboard.TestDiskSpace@6ecd665]" started-at="2020-03-03T23:13:18 GMT+03:00" name="testCheckFiledMaxDeltaBytesEmptyValue" finished-at="2020-03-03T23:13:18 GMT+03:00" duration-ms="478" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckFiledMaxDeltaBytesEmptyValue -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestDiskSpace@6ecd665]" started-at="2020-03-03T23:13:18 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:13:18 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestDiskSpace.testCheckFiledMaxDeltaBytesEmptyValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckFiledMaxDeltaBytesEmptyValue status=SUCCESS method=TestDiskSpace.testCheckFiledMaxDeltaBytesEmptyValue()[pri:2, instance:TestPage.TestDashboard.TestDiskSpace@6ecd665] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckFiledMaxDeltaMinutesEmptyValue()[pri:2, instance:TestPage.TestDashboard.TestDiskSpace@6ecd665]" started-at="2020-03-03T23:13:18 GMT+03:00" name="testCheckFiledMaxDeltaMinutesEmptyValue" finished-at="2020-03-03T23:13:19 GMT+03:00" duration-ms="434" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckFiledMaxDeltaMinutesEmptyValue -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestDiskSpace@6ecd665]" started-at="2020-03-03T23:13:19 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:13:19 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestDiskSpace.testCheckFiledMaxDeltaMinutesEmptyValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckFiledMaxDeltaMinutesEmptyValue status=SUCCESS method=TestDiskSpace.testCheckFiledMaxDeltaMinutesEmptyValue()[pri:2, instance:TestPage.TestDashboard.TestDiskSpace@6ecd665] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
      </class> <!-- TestPage.TestDashboard.TestDiskSpace -->
    </test> <!-- DiskSpace -->
    <test started-at="2020-03-03T23:13:19 GMT+03:00" name="DbStatus" finished-at="2020-03-03T23:13:24 GMT+03:00" duration-ms="5722">
      <class name="TestPage.TestDashboard.TestDbStatus">
        <test-method is-config="true" signature="classSetUp()[pri:0, instance:TestPage.TestDashboard.TestDbStatus@5bb8f9e2]" started-at="2020-03-03T23:13:19 GMT+03:00" name="classSetUp" finished-at="2020-03-03T23:13:21 GMT+03:00" duration-ms="2556" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classSetUp -->
        <test-method signature="testCheckPeriodEmptyField()[pri:1, instance:TestPage.TestDashboard.TestDbStatus@5bb8f9e2]" started-at="2020-03-03T23:13:21 GMT+03:00" name="testCheckPeriodEmptyField" finished-at="2020-03-03T23:13:22 GMT+03:00" duration-ms="1325" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckPeriodEmptyField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestDbStatus@5bb8f9e2]" started-at="2020-03-03T23:13:22 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:13:22 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestDbStatus.testCheckPeriodEmptyField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckPeriodEmptyField status=SUCCESS method=TestDbStatus.testCheckPeriodEmptyField()[pri:1, instance:TestPage.TestDashboard.TestDbStatus@5bb8f9e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckStoreStatisticEmptyField()[pri:2, instance:TestPage.TestDashboard.TestDbStatus@5bb8f9e2]" started-at="2020-03-03T23:13:22 GMT+03:00" name="testCheckStoreStatisticEmptyField" finished-at="2020-03-03T23:13:23 GMT+03:00" duration-ms="639" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckStoreStatisticEmptyField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestDbStatus@5bb8f9e2]" started-at="2020-03-03T23:13:23 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:13:23 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestDbStatus.testCheckStoreStatisticEmptyField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckStoreStatisticEmptyField status=SUCCESS method=TestDbStatus.testCheckStoreStatisticEmptyField()[pri:2, instance:TestPage.TestDashboard.TestDbStatus@5bb8f9e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckStatisticsArchiveDepthEmptyValue()[pri:3, instance:TestPage.TestDashboard.TestDbStatus@5bb8f9e2]" started-at="2020-03-03T23:13:23 GMT+03:00" name="testCheckStatisticsArchiveDepthEmptyValue" finished-at="2020-03-03T23:13:24 GMT+03:00" duration-ms="604" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckStatisticsArchiveDepthEmptyValue -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestDbStatus@5bb8f9e2]" started-at="2020-03-03T23:13:24 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:13:24 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestDbStatus.testCheckStatisticsArchiveDepthEmptyValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckStatisticsArchiveDepthEmptyValue status=SUCCESS method=TestDbStatus.testCheckStatisticsArchiveDepthEmptyValue()[pri:3, instance:TestPage.TestDashboard.TestDbStatus@5bb8f9e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckStatisticsFileNamePatternEmptyField()[pri:4, instance:TestPage.TestDashboard.TestDbStatus@5bb8f9e2]" started-at="2020-03-03T23:13:24 GMT+03:00" name="testCheckStatisticsFileNamePatternEmptyField" finished-at="2020-03-03T23:13:24 GMT+03:00" duration-ms="587" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckStatisticsFileNamePatternEmptyField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestDbStatus@5bb8f9e2]" started-at="2020-03-03T23:13:24 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:13:24 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestDbStatus.testCheckStatisticsFileNamePatternEmptyField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckStatisticsFileNamePatternEmptyField status=SUCCESS method=TestDbStatus.testCheckStatisticsFileNamePatternEmptyField()[pri:4, instance:TestPage.TestDashboard.TestDbStatus@5bb8f9e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
      </class> <!-- TestPage.TestDashboard.TestDbStatus -->
    </test> <!-- DbStatus -->
    <test started-at="2020-03-03T23:13:24 GMT+03:00" name="IndexStatistics" finished-at="2020-03-03T23:13:29 GMT+03:00" duration-ms="4391">
      <class name="TestPage.TestDashboard.TestIndexStatistics">
        <test-method is-config="true" signature="classSetUp()[pri:0, instance:TestPage.TestDashboard.TestIndexStatistics@bcb09a6]" started-at="2020-03-03T23:13:24 GMT+03:00" name="classSetUp" finished-at="2020-03-03T23:13:27 GMT+03:00" duration-ms="2542" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classSetUp -->
        <test-method signature="testCheckFieldPeriodEmptyValue()[pri:1, instance:TestPage.TestDashboard.TestIndexStatistics@bcb09a6]" started-at="2020-03-03T23:13:27 GMT+03:00" name="testCheckFieldPeriodEmptyValue" finished-at="2020-03-03T23:13:28 GMT+03:00" duration-ms="1355" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckFieldPeriodEmptyValue -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestIndexStatistics@bcb09a6]" started-at="2020-03-03T23:13:28 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:13:28 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestIndexStatistics.testCheckFieldPeriodEmptyValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckFieldPeriodEmptyValue status=SUCCESS method=TestIndexStatistics.testCheckFieldPeriodEmptyValue()[pri:1, instance:TestPage.TestDashboard.TestIndexStatistics@bcb09a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckFieldStatisticsArchiveDepthEmptyValue()[pri:2, instance:TestPage.TestDashboard.TestIndexStatistics@bcb09a6]" started-at="2020-03-03T23:13:28 GMT+03:00" name="testCheckFieldStatisticsArchiveDepthEmptyValue" finished-at="2020-03-03T23:13:29 GMT+03:00" duration-ms="488" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckFieldStatisticsArchiveDepthEmptyValue -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestIndexStatistics@bcb09a6]" started-at="2020-03-03T23:13:29 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:13:29 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestIndexStatistics.testCheckFieldStatisticsArchiveDepthEmptyValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckFieldStatisticsArchiveDepthEmptyValue status=SUCCESS method=TestIndexStatistics.testCheckFieldStatisticsArchiveDepthEmptyValue()[pri:2, instance:TestPage.TestDashboard.TestIndexStatistics@bcb09a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
      </class> <!-- TestPage.TestDashboard.TestIndexStatistics -->
    </test> <!-- IndexStatistics -->
    <test started-at="2020-03-03T23:13:29 GMT+03:00" name="LowLevelMetadata" finished-at="2020-03-03T23:13:35 GMT+03:00" duration-ms="6011">
      <class name="TestPage.TestDashboard.TestLowLevelMetadata">
        <test-method is-config="true" signature="classSetUp()[pri:0, instance:TestPage.TestDashboard.TestLowLevelMetadata@25c5e994]" started-at="2020-03-03T23:13:29 GMT+03:00" name="classSetUp" finished-at="2020-03-03T23:13:32 GMT+03:00" duration-ms="2748" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classSetUp -->
        <test-method signature="testCheckPeriodEmptyField()[pri:1, instance:TestPage.TestDashboard.TestLowLevelMetadata@25c5e994]" started-at="2020-03-03T23:13:32 GMT+03:00" name="testCheckPeriodEmptyField" finished-at="2020-03-03T23:13:33 GMT+03:00" duration-ms="1370" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckPeriodEmptyField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestLowLevelMetadata@25c5e994]" started-at="2020-03-03T23:13:33 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:13:33 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestLowLevelMetadata.testCheckPeriodEmptyField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckPeriodEmptyField status=SUCCESS method=TestLowLevelMetadata.testCheckPeriodEmptyField()[pri:1, instance:TestPage.TestDashboard.TestLowLevelMetadata@25c5e994] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckFieldMetadataFolderEmptyValue()[pri:2, instance:TestPage.TestDashboard.TestLowLevelMetadata@25c5e994]" started-at="2020-03-03T23:13:33 GMT+03:00" name="testCheckFieldMetadataFolderEmptyValue" finished-at="2020-03-03T23:13:34 GMT+03:00" duration-ms="624" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckFieldMetadataFolderEmptyValue -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestLowLevelMetadata@25c5e994]" started-at="2020-03-03T23:13:34 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:13:34 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestLowLevelMetadata.testCheckFieldMetadataFolderEmptyValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckFieldMetadataFolderEmptyValue status=SUCCESS method=TestLowLevelMetadata.testCheckFieldMetadataFolderEmptyValue()[pri:2, instance:TestPage.TestDashboard.TestLowLevelMetadata@25c5e994] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckFieldMaxFormatsEmptyValue()[pri:3, instance:TestPage.TestDashboard.TestLowLevelMetadata@25c5e994]" started-at="2020-03-03T23:13:34 GMT+03:00" name="testCheckFieldMaxFormatsEmptyValue" finished-at="2020-03-03T23:13:34 GMT+03:00" duration-ms="637" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckFieldMaxFormatsEmptyValue -->
        <test-method signature="testCheckFieldDateFormatFolderNameEmptyValue()[pri:4, instance:TestPage.TestDashboard.TestLowLevelMetadata@25c5e994]" started-at="2020-03-03T23:13:34 GMT+03:00" name="testCheckFieldDateFormatFolderNameEmptyValue" finished-at="2020-03-03T23:13:35 GMT+03:00" duration-ms="620" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckFieldDateFormatFolderNameEmptyValue -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestLowLevelMetadata@25c5e994]" started-at="2020-03-03T23:13:34 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:13:34 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestLowLevelMetadata.testCheckFieldMaxFormatsEmptyValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckFieldMaxFormatsEmptyValue status=SUCCESS method=TestLowLevelMetadata.testCheckFieldMaxFormatsEmptyValue()[pri:3, instance:TestPage.TestDashboard.TestLowLevelMetadata@25c5e994] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.TestLowLevelMetadata@25c5e994]" started-at="2020-03-03T23:13:35 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:13:35 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.TestLowLevelMetadata.testCheckFieldDateFormatFolderNameEmptyValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckFieldDateFormatFolderNameEmptyValue status=SUCCESS method=TestLowLevelMetadata.testCheckFieldDateFormatFolderNameEmptyValue()[pri:4, instance:TestPage.TestDashboard.TestLowLevelMetadata@25c5e994] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
      </class> <!-- TestPage.TestDashboard.TestLowLevelMetadata -->
    </test> <!-- LowLevelMetadata -->
    <test started-at="2020-03-03T23:13:35 GMT+03:00" name="Replica" finished-at="2020-03-03T23:16:31 GMT+03:00" duration-ms="176418">
      <class name="TestPage.TestDashboard.Replica.TestReplica">
        <test-method is-config="true" signature="classSetUp()[pri:0, instance:TestPage.TestDashboard.Replica.TestReplica@63429932]" started-at="2020-03-03T23:13:35 GMT+03:00" name="classSetUp" finished-at="2020-03-03T23:13:37 GMT+03:00" duration-ms="2082" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classSetUp -->
        <test-method signature="testCreateMasterSync_EmptyReplicaDatabaseField()[pri:1, instance:TestPage.TestDashboard.Replica.TestReplica@63429932]" started-at="2020-03-03T23:13:37 GMT+03:00" name="testCreateMasterSync_EmptyReplicaDatabaseField" finished-at="2020-03-03T23:13:39 GMT+03:00" duration-ms="2273" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateMasterSync_EmptyReplicaDatabaseField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Replica.TestReplica@63429932]" started-at="2020-03-03T23:13:39 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:13:39 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Replica.TestReplica.testCreateMasterSync_EmptyReplicaDatabaseField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateMasterSync_EmptyReplicaDatabaseField status=SUCCESS method=TestReplica.testCreateMasterSync_EmptyReplicaDatabaseField()[pri:1, instance:TestPage.TestDashboard.Replica.TestReplica@63429932] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateMasterSync_Correct()[pri:2, instance:TestPage.TestDashboard.Replica.TestReplica@63429932]" started-at="2020-03-03T23:13:39 GMT+03:00" name="testCreateMasterSync_Correct" finished-at="2020-03-03T23:13:44 GMT+03:00" duration-ms="5125" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateMasterSync_Correct -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Replica.TestReplica@63429932]" started-at="2020-03-03T23:13:44 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:13:44 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Replica.TestReplica.testCreateMasterSync_Correct()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateMasterSync_Correct status=SUCCESS method=TestReplica.testCreateMasterSync_Correct()[pri:2, instance:TestPage.TestDashboard.Replica.TestReplica@63429932] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateReplicaSync_Correct()[pri:3, instance:TestPage.TestDashboard.Replica.TestReplica@63429932]" started-at="2020-03-03T23:13:44 GMT+03:00" name="testCreateReplicaSync_Correct" finished-at="2020-03-03T23:13:52 GMT+03:00" duration-ms="7366" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateReplicaSync_Correct -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Replica.TestReplica@63429932]" started-at="2020-03-03T23:13:52 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:13:52 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Replica.TestReplica.testCreateReplicaSync_Correct()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateReplicaSync_Correct status=SUCCESS method=TestReplica.testCreateReplicaSync_Correct()[pri:3, instance:TestPage.TestDashboard.Replica.TestReplica@63429932] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateMasterAsync_EmptyLogDirectoryField()[pri:4, instance:TestPage.TestDashboard.Replica.TestReplica@63429932]" started-at="2020-03-03T23:13:52 GMT+03:00" name="testCreateMasterAsync_EmptyLogDirectoryField" finished-at="2020-03-03T23:13:57 GMT+03:00" duration-ms="5807" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateMasterAsync_EmptyLogDirectoryField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Replica.TestReplica@63429932]" started-at="2020-03-03T23:13:57 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:13:57 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Replica.TestReplica.testCreateMasterAsync_EmptyLogDirectoryField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateMasterAsync_EmptyLogDirectoryField status=SUCCESS method=TestReplica.testCreateMasterAsync_EmptyLogDirectoryField()[pri:4, instance:TestPage.TestDashboard.Replica.TestReplica@63429932] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateMasterAsync_EmptyLogArchiveDirectoryField()[pri:5, instance:TestPage.TestDashboard.Replica.TestReplica@63429932]" started-at="2020-03-03T23:13:57 GMT+03:00" name="testCreateMasterAsync_EmptyLogArchiveDirectoryField" finished-at="2020-03-03T23:13:59 GMT+03:00" depends-on-methods="TestPage.TestDashboard.Replica.TestReplica.testCreateMasterAsync_EmptyLogDirectoryField" duration-ms="1502" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateMasterAsync_EmptyLogArchiveDirectoryField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Replica.TestReplica@63429932]" started-at="2020-03-03T23:13:59 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:13:59 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Replica.TestReplica.testCreateMasterAsync_EmptyLogArchiveDirectoryField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateMasterAsync_EmptyLogArchiveDirectoryField status=SUCCESS method=TestReplica.testCreateMasterAsync_EmptyLogArchiveDirectoryField()[pri:5, instance:TestPage.TestDashboard.Replica.TestReplica@63429932] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateMasterAsync_IncorrectLogArchiveTimeoutField()[pri:6, instance:TestPage.TestDashboard.Replica.TestReplica@63429932]" started-at="2020-03-03T23:13:59 GMT+03:00" name="testCreateMasterAsync_IncorrectLogArchiveTimeoutField" finished-at="2020-03-03T23:13:59 GMT+03:00" depends-on-methods="TestPage.TestDashboard.Replica.TestReplica.testCreateMasterAsync_EmptyLogArchiveDirectoryField" duration-ms="469" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateMasterAsync_IncorrectLogArchiveTimeoutField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Replica.TestReplica@63429932]" started-at="2020-03-03T23:13:59 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:13:59 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Replica.TestReplica.testCreateMasterAsync_IncorrectLogArchiveTimeoutField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateMasterAsync_IncorrectLogArchiveTimeoutField status=SUCCESS method=TestReplica.testCreateMasterAsync_IncorrectLogArchiveTimeoutField()[pri:6, instance:TestPage.TestDashboard.Replica.TestReplica@63429932] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateMasterAsync_Correct()[pri:7, instance:TestPage.TestDashboard.Replica.TestReplica@63429932]" started-at="2020-03-03T23:13:59 GMT+03:00" name="testCreateMasterAsync_Correct" finished-at="2020-03-03T23:14:06 GMT+03:00" depends-on-methods="TestPage.TestDashboard.Replica.TestReplica.testCreateMasterAsync_IncorrectLogArchiveTimeoutField" duration-ms="6113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateMasterAsync_Correct -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Replica.TestReplica@63429932]" started-at="2020-03-03T23:14:06 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:14:06 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Replica.TestReplica.testCreateMasterAsync_Correct() throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateMasterAsync_Correct status=SUCCESS method=TestReplica.testCreateMasterAsync_Correct()[pri:7, instance:TestPage.TestDashboard.Replica.TestReplica@63429932] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateMasterAsync_CheckCreateTable()[pri:8, instance:TestPage.TestDashboard.Replica.TestReplica@63429932]" started-at="2020-03-03T23:14:06 GMT+03:00" name="testCreateMasterAsync_CheckCreateTable" finished-at="2020-03-03T23:15:26 GMT+03:00" depends-on-methods="TestPage.TestDashboard.Replica.TestReplica.testCreateMasterAsync_Correct" duration-ms="80155" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateMasterAsync_CheckCreateTable -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Replica.TestReplica@63429932]" started-at="2020-03-03T23:15:26 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:15:26 GMT+03:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Replica.TestReplica.testCreateMasterAsync_CheckCreateTable() throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateMasterAsync_CheckCreateTable status=SUCCESS method=TestReplica.testCreateMasterAsync_CheckCreateTable()[pri:8, instance:TestPage.TestDashboard.Replica.TestReplica@63429932] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateMasterAsync_ReinitializeReplicaDatabaseCorrect()[pri:9, instance:TestPage.TestDashboard.Replica.TestReplica@63429932]" started-at="2020-03-03T23:15:26 GMT+03:00" name="testCreateMasterAsync_ReinitializeReplicaDatabaseCorrect" finished-at="2020-03-03T23:15:42 GMT+03:00" depends-on-methods="TestPage.TestDashboard.Replica.TestReplica.testCreateMasterAsync_CheckCreateTable" duration-ms="16152" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateMasterAsync_ReinitializeReplicaDatabaseCorrect -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Replica.TestReplica@63429932]" started-at="2020-03-03T23:15:42 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:15:42 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Replica.TestReplica.testCreateMasterAsync_ReinitializeReplicaDatabaseCorrect()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateMasterAsync_ReinitializeReplicaDatabaseCorrect status=SUCCESS method=TestReplica.testCreateMasterAsync_ReinitializeReplicaDatabaseCorrect()[pri:9, instance:TestPage.TestDashboard.Replica.TestReplica@63429932] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateReplicaAsync_EmptyLogArchiveDirectoryField()[pri:10, instance:TestPage.TestDashboard.Replica.TestReplica@63429932]" started-at="2020-03-03T23:15:42 GMT+03:00" name="testCreateReplicaAsync_EmptyLogArchiveDirectoryField" finished-at="2020-03-03T23:15:55 GMT+03:00" depends-on-methods="TestPage.TestDashboard.Replica.TestReplica.testCreateMasterAsync_ReinitializeReplicaDatabaseCorrect" duration-ms="12751" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateReplicaAsync_EmptyLogArchiveDirectoryField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Replica.TestReplica@63429932]" started-at="2020-03-03T23:15:55 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:15:55 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Replica.TestReplica.testCreateReplicaAsync_EmptyLogArchiveDirectoryField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateReplicaAsync_EmptyLogArchiveDirectoryField status=SUCCESS method=TestReplica.testCreateReplicaAsync_EmptyLogArchiveDirectoryField()[pri:10, instance:TestPage.TestDashboard.Replica.TestReplica@63429932] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateReplicaAsync_Correct()[pri:11, instance:TestPage.TestDashboard.Replica.TestReplica@63429932]" started-at="2020-03-03T23:15:55 GMT+03:00" name="testCreateReplicaAsync_Correct" finished-at="2020-03-03T23:15:59 GMT+03:00" depends-on-methods="TestPage.TestDashboard.Replica.TestReplica.testCreateReplicaAsync_EmptyLogArchiveDirectoryField" duration-ms="4839" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateReplicaAsync_Correct -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Replica.TestReplica@63429932]" started-at="2020-03-03T23:15:59 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:15:59 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Replica.TestReplica.testCreateReplicaAsync_Correct()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateReplicaAsync_Correct status=SUCCESS method=TestReplica.testCreateReplicaAsync_Correct()[pri:11, instance:TestPage.TestDashboard.Replica.TestReplica@63429932] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testAddFtpCorrect()[pri:12, instance:TestPage.TestDashboard.Replica.TestReplica@63429932]" started-at="2020-03-03T23:15:59 GMT+03:00" name="testAddFtpCorrect" finished-at="2020-03-03T23:16:10 GMT+03:00" depends-on-methods="TestPage.TestDashboard.Replica.TestReplica.testCreateReplicaAsync_Correct" duration-ms="10316" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddFtpCorrect -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Replica.TestReplica@63429932]" started-at="2020-03-03T23:16:10 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:16:10 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Replica.TestReplica.testAddFtpCorrect()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testAddFtpCorrect status=SUCCESS method=TestReplica.testAddFtpCorrect()[pri:12, instance:TestPage.TestDashboard.Replica.TestReplica@63429932] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testAddCloudBackupCorrect()[pri:13, instance:TestPage.TestDashboard.Replica.TestReplica@63429932]" started-at="2020-03-03T23:16:10 GMT+03:00" name="testAddCloudBackupCorrect" finished-at="2020-03-03T23:16:19 GMT+03:00" depends-on-methods="TestPage.TestDashboard.Replica.TestReplica.testAddFtpCorrect" duration-ms="9049" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddCloudBackupCorrect -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Replica.TestReplica@63429932]" started-at="2020-03-03T23:16:19 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:16:19 GMT+03:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Replica.TestReplica.testAddCloudBackupCorrect()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testAddCloudBackupCorrect status=SUCCESS method=TestReplica.testAddCloudBackupCorrect()[pri:13, instance:TestPage.TestDashboard.Replica.TestReplica@63429932] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testAddCloudBackupReceiverCorrect()[pri:14, instance:TestPage.TestDashboard.Replica.TestReplica@63429932]" started-at="2020-03-03T23:16:19 GMT+03:00" name="testAddCloudBackupReceiverCorrect" finished-at="2020-03-03T23:16:26 GMT+03:00" depends-on-methods="TestPage.TestDashboard.Replica.TestReplica.testAddCloudBackupCorrect" duration-ms="7365" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddCloudBackupReceiverCorrect -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Replica.TestReplica@63429932]" started-at="2020-03-03T23:16:26 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:16:26 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Replica.TestReplica.testAddCloudBackupReceiverCorrect() throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testAddCloudBackupReceiverCorrect status=SUCCESS method=TestReplica.testAddCloudBackupReceiverCorrect()[pri:14, instance:TestPage.TestDashboard.Replica.TestReplica@63429932] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateReplicaAsync_CheckSelectTable()[pri:15, instance:TestPage.TestDashboard.Replica.TestReplica@63429932]" started-at="2020-03-03T23:16:26 GMT+03:00" name="testCreateReplicaAsync_CheckSelectTable" finished-at="2020-03-03T23:16:31 GMT+03:00" depends-on-methods="TestPage.TestDashboard.Replica.TestReplica.testAddCloudBackupReceiverCorrect" duration-ms="5006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateReplicaAsync_CheckSelectTable -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestDashboard.Replica.TestReplica@63429932]" started-at="2020-03-03T23:16:31 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:16:31 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestDashboard.Replica.TestReplica.testCreateReplicaAsync_CheckSelectTable() throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateReplicaAsync_CheckSelectTable status=SUCCESS method=TestReplica.testCreateReplicaAsync_CheckSelectTable()[pri:15, instance:TestPage.TestDashboard.Replica.TestReplica@63429932] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
      </class> <!-- TestPage.TestDashboard.Replica.TestReplica -->
    </test> <!-- Replica -->
    <test started-at="2020-03-03T23:16:31 GMT+03:00" name="TransactionMonitoring" finished-at="2020-03-03T23:16:42 GMT+03:00" duration-ms="10296">
      <class name="TestPage.TestPerformance.TestTransactionMonitoring">
        <test-method is-config="true" signature="classSetUp()[pri:0, instance:TestPage.TestPerformance.TestTransactionMonitoring@710d7aff]" started-at="2020-03-03T23:16:31 GMT+03:00" name="classSetUp" finished-at="2020-03-03T23:16:35 GMT+03:00" duration-ms="3644" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classSetUp -->
        <test-method signature="testCheckPeriodEmptyField()[pri:1, instance:TestPage.TestPerformance.TestTransactionMonitoring@710d7aff]" started-at="2020-03-03T23:16:35 GMT+03:00" name="testCheckPeriodEmptyField" finished-at="2020-03-03T23:16:38 GMT+03:00" duration-ms="2913" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckPeriodEmptyField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestPerformance.TestTransactionMonitoring@710d7aff]" started-at="2020-03-03T23:16:38 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:16:38 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestPerformance.TestTransactionMonitoring.testCheckPeriodEmptyField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckPeriodEmptyField status=SUCCESS method=TestTransactionMonitoring.testCheckPeriodEmptyField()[pri:1, instance:TestPage.TestPerformance.TestTransactionMonitoring@710d7aff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckFieldOutputFolderEmptyValue()[pri:2, instance:TestPage.TestPerformance.TestTransactionMonitoring@710d7aff]" started-at="2020-03-03T23:16:38 GMT+03:00" name="testCheckFieldOutputFolderEmptyValue" finished-at="2020-03-03T23:16:39 GMT+03:00" duration-ms="1166" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckFieldOutputFolderEmptyValue -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestPerformance.TestTransactionMonitoring@710d7aff]" started-at="2020-03-03T23:16:39 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:16:39 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestPerformance.TestTransactionMonitoring.testCheckFieldOutputFolderEmptyValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckFieldOutputFolderEmptyValue status=SUCCESS method=TestTransactionMonitoring.testCheckFieldOutputFolderEmptyValue()[pri:2, instance:TestPage.TestPerformance.TestTransactionMonitoring@710d7aff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckFiledShowTransactionsOlderEmptyValue()[pri:3, instance:TestPage.TestPerformance.TestTransactionMonitoring@710d7aff]" started-at="2020-03-03T23:16:39 GMT+03:00" name="testCheckFiledShowTransactionsOlderEmptyValue" finished-at="2020-03-03T23:16:40 GMT+03:00" duration-ms="647" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckFiledShowTransactionsOlderEmptyValue -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestPerformance.TestTransactionMonitoring@710d7aff]" started-at="2020-03-03T23:16:40 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:16:40 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestPerformance.TestTransactionMonitoring.testCheckFiledShowTransactionsOlderEmptyValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckFiledShowTransactionsOlderEmptyValue status=SUCCESS method=TestTransactionMonitoring.testCheckFiledShowTransactionsOlderEmptyValue()[pri:3, instance:TestPage.TestPerformance.TestTransactionMonitoring@710d7aff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateFiledShowTransactionsOlderNumbNegativeValue()[pri:4, instance:TestPage.TestPerformance.TestTransactionMonitoring@710d7aff]" started-at="2020-03-03T23:16:40 GMT+03:00" name="testCreateFiledShowTransactionsOlderNumbNegativeValue" finished-at="2020-03-03T23:16:40 GMT+03:00" duration-ms="210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateFiledShowTransactionsOlderNumbNegativeValue -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestPerformance.TestTransactionMonitoring@710d7aff]" started-at="2020-03-03T23:16:40 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:16:40 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestPerformance.TestTransactionMonitoring.testCreateFiledShowTransactionsOlderNumbNegativeValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateFiledShowTransactionsOlderNumbNegativeValue status=SUCCESS method=TestTransactionMonitoring.testCreateFiledShowTransactionsOlderNumbNegativeValue()[pri:4, instance:TestPage.TestPerformance.TestTransactionMonitoring@710d7aff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckSendAlertOldestActiveTransactionEmptyValue()[pri:5, instance:TestPage.TestPerformance.TestTransactionMonitoring@710d7aff]" started-at="2020-03-03T23:16:40 GMT+03:00" name="testCheckSendAlertOldestActiveTransactionEmptyValue" finished-at="2020-03-03T23:16:40 GMT+03:00" duration-ms="595" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckSendAlertOldestActiveTransactionEmptyValue -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestPerformance.TestTransactionMonitoring@710d7aff]" started-at="2020-03-03T23:16:40 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:16:40 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestPerformance.TestTransactionMonitoring.testCheckSendAlertOldestActiveTransactionEmptyValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckSendAlertOldestActiveTransactionEmptyValue status=SUCCESS method=TestTransactionMonitoring.testCheckSendAlertOldestActiveTransactionEmptyValue()[pri:5, instance:TestPage.TestPerformance.TestTransactionMonitoring@710d7aff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateSendAlertOldestActiveTransactionNumbNegativeValue()[pri:6, instance:TestPage.TestPerformance.TestTransactionMonitoring@710d7aff]" started-at="2020-03-03T23:16:40 GMT+03:00" name="testCreateSendAlertOldestActiveTransactionNumbNegativeValue" finished-at="2020-03-03T23:16:41 GMT+03:00" duration-ms="237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateSendAlertOldestActiveTransactionNumbNegativeValue -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestPerformance.TestTransactionMonitoring@710d7aff]" started-at="2020-03-03T23:16:41 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:16:41 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestPerformance.TestTransactionMonitoring.testCreateSendAlertOldestActiveTransactionNumbNegativeValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateSendAlertOldestActiveTransactionNumbNegativeValue status=SUCCESS method=TestTransactionMonitoring.testCreateSendAlertOldestActiveTransactionNumbNegativeValue()[pri:6, instance:TestPage.TestPerformance.TestTransactionMonitoring@710d7aff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckShowOnlyNNOldestActiveTransactionsEmptyValue()[pri:7, instance:TestPage.TestPerformance.TestTransactionMonitoring@710d7aff]" started-at="2020-03-03T23:16:41 GMT+03:00" name="testCheckShowOnlyNNOldestActiveTransactionsEmptyValue" finished-at="2020-03-03T23:16:41 GMT+03:00" duration-ms="600" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckShowOnlyNNOldestActiveTransactionsEmptyValue -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestPerformance.TestTransactionMonitoring@710d7aff]" started-at="2020-03-03T23:16:41 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:16:41 GMT+03:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestPerformance.TestTransactionMonitoring.testCheckShowOnlyNNOldestActiveTransactionsEmptyValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckShowOnlyNNOldestActiveTransactionsEmptyValue status=SUCCESS method=TestTransactionMonitoring.testCheckShowOnlyNNOldestActiveTransactionsEmptyValue()[pri:7, instance:TestPage.TestPerformance.TestTransactionMonitoring@710d7aff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCreateShowOnlyNNOldestActiveTransactionsNumbNegativeValue()[pri:8, instance:TestPage.TestPerformance.TestTransactionMonitoring@710d7aff]" started-at="2020-03-03T23:16:41 GMT+03:00" name="testCreateShowOnlyNNOldestActiveTransactionsNumbNegativeValue" finished-at="2020-03-03T23:16:42 GMT+03:00" duration-ms="258" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateShowOnlyNNOldestActiveTransactionsNumbNegativeValue -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestPerformance.TestTransactionMonitoring@710d7aff]" started-at="2020-03-03T23:16:42 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:16:42 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestPerformance.TestTransactionMonitoring.testCreateShowOnlyNNOldestActiveTransactionsNumbNegativeValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCreateShowOnlyNNOldestActiveTransactionsNumbNegativeValue status=SUCCESS method=TestTransactionMonitoring.testCreateShowOnlyNNOldestActiveTransactionsNumbNegativeValue()[pri:8, instance:TestPage.TestPerformance.TestTransactionMonitoring@710d7aff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
      </class> <!-- TestPage.TestPerformance.TestTransactionMonitoring -->
    </test> <!-- TransactionMonitoring -->
    <test started-at="2020-03-03T23:16:42 GMT+03:00" name="PerformanceMonitoring" finished-at="2020-03-03T23:16:48 GMT+03:00" duration-ms="6150">
      <class name="TestPage.TestPerformance.TestPerformanceMonitoring">
        <test-method is-config="true" signature="suiteSetUp(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestPage.TestPerformance.TestPerformanceMonitoring@36bc415e]" started-at="2020-03-03T23:05:45 GMT+03:00" name="suiteSetUp" finished-at="2020-03-03T23:07:35 GMT+03:00" duration-ms="110598" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://admin:strong password@localhost:8082/]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[C:\HQBirdData\]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suiteSetUp -->
        <test-method is-config="true" signature="classSetUp()[pri:0, instance:TestPage.TestPerformance.TestPerformanceMonitoring@36bc415e]" started-at="2020-03-03T23:16:42 GMT+03:00" name="classSetUp" finished-at="2020-03-03T23:16:44 GMT+03:00" duration-ms="2524" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classSetUp -->
        <test-method signature="testCheckPeriodEmptyField()[pri:1, instance:TestPage.TestPerformance.TestPerformanceMonitoring@36bc415e]" started-at="2020-03-03T23:16:44 GMT+03:00" name="testCheckPeriodEmptyField" finished-at="2020-03-03T23:16:47 GMT+03:00" duration-ms="2901" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckPeriodEmptyField -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestPerformance.TestPerformanceMonitoring@36bc415e]" started-at="2020-03-03T23:16:47 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:16:47 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestPerformance.TestPerformanceMonitoring.testCheckPeriodEmptyField()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckPeriodEmptyField status=SUCCESS method=TestPerformanceMonitoring.testCheckPeriodEmptyField()[pri:1, instance:TestPage.TestPerformance.TestPerformanceMonitoring@36bc415e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method signature="testCheckFieldOutputFolderEmptyValue()[pri:2, instance:TestPage.TestPerformance.TestPerformanceMonitoring@36bc415e]" started-at="2020-03-03T23:16:47 GMT+03:00" name="testCheckFieldOutputFolderEmptyValue" finished-at="2020-03-03T23:16:48 GMT+03:00" duration-ms="720" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckFieldOutputFolderEmptyValue -->
        <test-method is-config="true" signature="methodTearDown(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:TestPage.TestPerformance.TestPerformanceMonitoring@36bc415e]" started-at="2020-03-03T23:16:48 GMT+03:00" name="methodTearDown" finished-at="2020-03-03T23:16:48 GMT+03:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestPage.TestPerformance.TestPerformanceMonitoring.testCheckFieldOutputFolderEmptyValue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=testCheckFieldOutputFolderEmptyValue status=SUCCESS method=TestPerformanceMonitoring.testCheckFieldOutputFolderEmptyValue()[pri:2, instance:TestPage.TestPerformance.TestPerformanceMonitoring@36bc415e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodTearDown -->
        <test-method is-config="true" signature="suiteTearDown()[pri:0, instance:TestPage.TestPerformance.TestPerformanceMonitoring@36bc415e]" started-at="2020-03-03T23:16:48 GMT+03:00" name="suiteTearDown" finished-at="2020-03-03T23:16:48 GMT+03:00" duration-ms="757" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suiteTearDown -->
      </class> <!-- TestPage.TestPerformance.TestPerformanceMonitoring -->
    </test> <!-- PerformanceMonitoring -->
  </suite> <!-- TestOne -->
</testng-results>
